{"version":3,"sources":["models/Resultant.js","models/Force.js","models/Coordinates.js","models/Support.js","models/Displacement.js","models/Node.js","models/Material.js","models/Section.js","models/Circular.js","models/Rectangular.js","models/Bar.js","services/dataServices.js","controllers/nodeController.js","controllers/barController.js","controllers/coordinatePlaneController.js","services/httpServices.js","components/common/coordinatesLabel/index.js","components/common/coordinatesLabel/coordinatesLabel.jsx","components/common/support/index.js","components/common/support/support.jsx","components/common/force/index.js","components/common/force/force.jsx","components/common/point/index.js","components/common/point/point.jsx","components/common/node/index.js","components/common/node/node.jsx","components/common/bar/index.js","components/common/bar/bar.jsx","components/common/coordinatePlane/index.js","components/common/coordinatePlane/coordinatePlane.jsx","components/common/actionButton/index.js","components/common/actionButton/actionButton.jsx","components/common/inputFormGroup/index.js","components/common/inputFormGroup/inputFormGroup.jsx","components/common/menu/index.js","components/common/menu/menu.jsx","components/common/form/form.jsx","components/nodeForm/index.js","components/nodeForm/nodeForm.jsx","components/barForm/index.js","components/barForm/barForm.jsx","components/common/form/index.js","components/trussSolver/index.js","components/trussSolver/trussSolver.jsx","components/common/tableHeader/index.js","components/common/tableHeader/tableHeader.jsx","components/common/tableBody/index.js","components/common/tableBody/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","components/displacementTable/index.js","components/displacementTable/displacementTable.jsx","components/forcesTable/forcesTable.jsx","components/stressTable/index.js","components/stressTable/stressTable.jsx","components/internalForcesTable/internalForcesTable.jsx","components/results/index.js","components/results/results.jsx","App.js","index.js"],"names":["Resultant","_x","_y","this","x","Number","y","Math","sqrt","Force","Coordinates","Support","_type","Roller","Pin","None","support","type","Displacement","Node","_id","name","coordinate","force","displacement","coordinates","Material","Steel","index","rating","Wood","mat","_index","_rating","val","Section","Circular","radius","_radius","area","PI","Rectangular","_height","_width","height","width","Bar","id","nodeI","nodeJ","material","section","internalForce","stress","xi","yi","xj","yj","a","abs","b","fetchAll","key","JSON","parse","localStorage","getItem","updateAndFetch","data","setItem","stringify","convertToNodeModel","map","item","e","convertToBarModel","getAllNodes","error","console","_generateId","random","toString","substr","_generateName","nodes","length","names","charCodeAt","String","fromCharCode","max","getNodeById","find","getNodeByName","n","addNode","newNode","createNode","filter","push","updateNode","tempNodes","deleteNode","getSupportValues","xSupport","ySupport","getSupportType","xCoord","yCoord","xForce","yForce","isNaN","_isValidData","xDisplacement","yDisplacement","allNodes","setForce","source","node","setDisplacement","setNodeResults","forces","displacements","getAllBars","getBarById","bar","getBarNodes","nodeNameI","nodeNameJ","nodeController","deleteConnectedBars","bars","createBar","updateBarNode","updateBar","addBar","deleteBar","filtered","setBarResults","internalForces","planeSize","origin","calcRelativeCoord","xRel","yRel","calculatePlaneSize","viewBox","axios","defaults","baseURL","get","post","put","delete","CoordinatesLabel","placement","text","className","contactCoords","offset","base","x1","y1","x2","y2","stroke","strokeWidth","pin","points","fill","roller","cx","cy","r","direction","magnitude","style","rx","lineWidth","rotate","transform","calcDirection","Point","isSelected","center","strokeStyle","items","from","enter","c","props","onClick","size","labelOn","forcesOn","nameOn","nodeNameColor","animation","labelPlacement","calcLabelPosition","coords","label","opacity","to","delay","labelColor","coord1","coord2","strokeLinecap","CoordinatePlane","primaryData","secondaryData","selectedNode","onSetSelectedNode","onSetSelectedBar","primaryLabelsOn","primaryNamesOn","secondaryLabelsOn","secondaryNamesOn","primaryForcesOn","secondaryForcesOn","nodeFill","nodeSize","barFill","barSize","useState","setWidth","setHeight","ref","useRef","useEffect","current","clientWidth","clientHeight","defaultScale","options","limitToBounds","defaultPositionX","defaultPositionY","doubleClick","mode","Fragment","config","slow","wobbly","ActionButton","color","Button","InputFormGroup","value","onChange","placeholder","disabled","FormGroup","Label","for","Input","bsSize","Menu","selected","isOpen","setIsOpen","Dropdown","toggle","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","Form","handleSubmit","event","preventDefault","doSubmit","handleChange","input","currentTarget","state","setState","doUpdate","renderInputFormGroup","renderSubmitBtn","renderDropdownMenu","renderActionButton","Component","nodeForm","supportOptions","errors","prevProps","prevData","newData","onDeleteNode","_initializeForm","onUpdateNode","onAddNode","onSubmit","doDelete","barForm","onUpdateBar","onAddBar","onDeleteBar","isDisabled","prev","TrussSolver","displayNodes","setDisplayNodes","barController","displayBars","setDisplayBars","setSelectedNode","selectedBar","setSelectedBar","handleUpdateBar","controller","handleAddNode","handleUpdateNode","handleDeleteNode","handleAddBar","handleDeleteBar","http","then","res","resultantNodes","resultantBars","internal","history","pathname","catch","log","alert","clear","handleSetSelectedNode","handleSetSelectedBar","TableHeader","columns","col","scope","TableBody","_","path","content","toFixed","Table","header","DisplacementTable","ForcesTable","StressTable","getType","InternalForcesTable","Results","existingNodes","existingBars","location","planeController","exagNodeResults","xDis","yDis","exagBarResults","lookup","forEach","App","exact","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c43031c3.chunk.js","sourcesContent":["export default class Resultant {\n  constructor(_x = 0, _y = 0) {\n    this.x = Number(_x);\n    this.y = Number(_y);\n  }\n\n  get resultant() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n}\n","import Resultant from \"./Resultant\";\n\nexport default class Force extends Resultant {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n  }\n}\n","import Resultant from \"./Resultant\";\n\nexport default class Coordinates extends Resultant {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n  }\n}\n","export default class Support {\n  #supportValues = {\n    Roller: { x: 0, y: 1 },\n    Pin: { x: 1, y: 1 },\n    None: { x: 0, y: 0 },\n  };\n\n  constructor(_type) {\n    const support = this.#supportValues[_type];\n    this.type = support ? _type : \"None\";\n    this.x = this.#supportValues[this.type].x;\n    this.y = this.#supportValues[this.type].y;\n  }\n}\n","import Resultant from \"./Resultant\";\n\nexport default class Displacement extends Resultant {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n  }\n}\n","import Force from \"./Force\";\nimport Coordinates from \"./Coordinates\";\nimport Support from \"./Support\";\nimport Displacement from \"./Displacement\";\n\nexport default class Node {\n  constructor(_id, name, coordinate, force, support, displacement) {\n    this._id = _id;\n    this.name = name;\n    this.coordinates = new Coordinates(coordinate.x, coordinate.y);\n    this.force = new Force(force.x, force.y);\n    this.support = new Support(support.type);\n    this.displacement = new Displacement(displacement.x, displacement.y);\n  }\n}\n","// TODO: Fix Class\nexport default class Material {\n  #materials = {\n    Steel: { index: 1, rating: 29000 },\n    Wood: { index: 3, rating: 4200 },\n  };\n\n  constructor(type) {\n    this._type = type;\n    const mat = this.#materials[this._type];\n    if (mat) {\n      this._index = mat.index;\n      this._rating = mat.rating;\n    } else {\n      this._index = 0;\n      this._rating = 0;\n    }\n  }\n\n  /** This method should not be used, outside class.\n   * Implementation is only limited to two types of material\n   */\n  set index(val) {\n    this._index = val;\n    this._rating =\n      val === 1\n        ? this.#materials[\"Steel\"].rating\n        : this.#materials[\"Wood\"].rating;\n    this.type = val === 1 ? \"Steel\" : \"Wood\";\n  }\n\n  get index() {\n    return this._index;\n  }\n\n  /** This method should not be used, outside class.\n   * Implementation is only limited to two types of material\n   */\n  set rating(val) {\n    this._rating = val;\n    this._index = val === 29000 ? 1 : 3;\n    this.type = val === 29000 ? \"Steel\" : \"Wood\";\n  }\n\n  get rating() {\n    return this._rating;\n  }\n\n  set type(val) {\n    this._type = val;\n    const mat = this.#materials[this._type];\n    this._index = mat.index;\n    this._rating = mat.rating;\n  }\n\n  get type() {\n    return this._type;\n  }\n}\n","export default class Section {\n  constructor(_type) {\n    this.type = _type;\n  }\n}\n","import Section from \"./Section\";\n\nexport default class Circular extends Section {\n  constructor(radius = 1) {\n    super(\"Circular\");\n    this._radius = radius;\n    this.area = this._radius * this._radius * Math.PI;\n  }\n\n  get diameter() {\n    return this._radius * 2;\n  }\n\n  set radius(val) {\n    this._radius = val;\n    this.area = this._radius * this._radius * Math.PI;\n  }\n\n  get radius() {\n    return this._radius;\n  }\n}\n","import Section from \"./Section\";\n\nexport default class Rectangular extends Section {\n  constructor(_height = 1, _width = 1) {\n    super(\"Rectangular\");\n    this.height = _height;\n    this.width = _width;\n    this.area = this.height * this.width;\n  }\n}\n","import Material from \"./Material\";\nimport Circular from \"./Circular\";\nimport Rectangular from \"./Rectangular\";\nexport default class Bar {\n  constructor(\n    id,\n    nodeI,\n    nodeJ,\n    material,\n    section,\n    internalForce = 0,\n    stress = 0\n  ) {\n    this._id = id;\n    this.nodeI = nodeI;\n    this.nodeJ = nodeJ;\n    this.material = new Material(material);\n    this.section =\n      section === \"Circular\" ? new Circular(1) : new Rectangular(1, 1);\n    this.internalForce = internalForce;\n    this.stress = stress;\n    this.name = `${this.nodeI.name}${this.nodeJ.name}`;\n  }\n\n  get length() {\n    if (this.nodeI && this.nodeJ) {\n      const { x: xi, y: yi } = this.nodeI.coordinates;\n      const { x: xj, y: yj } = this.nodeJ.coordinates;\n      const a = Math.abs(xi - xj);\n      const b = Math.abs(yi - yj);\n      return Math.sqrt(a * a, b * b);\n    }\n    return 0;\n  }\n}\n","import Support from \"../models/Support\";\nimport Node from \"../models/Node\";\nimport Bar from \"../models/Bar\";\n\nexport const fetchAll = (key) => {\n\treturn JSON.parse(localStorage.getItem(key));\n};\n\nexport const updateAndFetch = (key, data) => {\n\tlocalStorage.setItem(key, JSON.stringify(data));\n\treturn fetchAll(key);\n};\n\nexport const reset = (key) => {\n\tupdateAndFetch(key, []);\n};\n\nexport const resetAll = () => {\n\tlocalStorage.clear();\n};\n\nexport const exaggerate = (source, magnitude) => {\n\treturn source.map((item) => {\n\t\tlet node = item;\n\t\tconst { x: xDis, y: yDis } = item.displacement;\n\t\tconst { x: xCoord, y: yCoord } = item.coordinates;\n\t\tnode.displacement.x = xDis * magnitude;\n\t\tnode.displacement.y = yDis * magnitude;\n\t\tnode.coordinates.x = xCoord + node.displacement.x;\n\t\tnode.coordinates.y = yCoord + node.displacement.y;\n\t\tnode.support = new Support();\n\t\treturn node;\n\t});\n};\n\nexport const convertToNodeModel = (data) => {\n\ttry {\n\t\tconst res = data.map((item) => {\n\t\t\tconst { _id, name, coordinates, force, support, displacement } = item;\n\t\t\treturn new Node(_id, name, coordinates, force, support, displacement);\n\t\t});\n\t\treturn res;\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nexport const convertToBarModel = (data) => {\n\ttry {\n\t\tconst res = data.map((item) => {\n\t\t\tconst { _id, nodeI, nodeJ, material, section } = item;\n\t\t\treturn new Bar(_id, nodeI, nodeJ, material._type, section);\n\t\t});\n\t\treturn res;\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nexport const createBarResults = (bars, resultantNodes) => {\n\t// build lookup table\n\tlet lookup = {};\n\tresultantNodes.forEach((node) => (lookup[node._id] = node));\n\tconst res = bars.map((item) => {\n\t\tconst nodeI = lookup[item.nodeI._id];\n\t\tconst nodeJ = lookup[item.nodeJ._id];\n\t\tconst { _id, material, section, internalForce, stress } = item;\n\t\treturn new Bar(_id, nodeI, nodeJ, material, section, internalForce, stress);\n\t});\n\treturn res;\n};\n","import Node from \"../models/Node\";\nimport Coordinates from \"../models/Coordinates\";\nimport Displacement from \"../models/Displacement\";\nimport Support from \"../models/Support\";\nimport Force from \"../models/Force\";\nimport {\n\tfetchAll,\n\tupdateAndFetch,\n\tconvertToNodeModel,\n} from \"../services/dataServices\";\n\n/**\n * Get data from local storage\n * @return {Array} nodes from localStorage\n */\nexport const getAllNodes = () => {\n\tconst data = fetchAll(\"nodes\");\n\tif (!data) return updateAndFetch(\"nodes\", []);\n\ttry {\n\t\tconst nodes = convertToNodeModel(data);\n\t\treturn nodes;\n\t} catch (error) {\n\t\t// Should never happen\n\t\t// Nodes are always initialized to [] if there are no saved nodes\n\t\tconsole.error(error);\n\t}\n};\n\n/**\n * Generates a string of length 10\n * @return {String} randomly generated Id\n */\nexport const _generateId = () => `_${Math.random().toString(36).substr(2, 9)}`;\n\n/**\n * Generates a 1 Uppercase Letter name\n * @return {String} next available name in the alphabet (uppercase) or \"A\"\n */\nexport const _generateName = (nodes) => {\n\tif (nodes && nodes.length > 0) {\n\t\tconst names = nodes.map((item) => item.name.charCodeAt(0));\n\t\tconst newName = String.fromCharCode(Math.max(...names) + 1);\n\t\treturn newName;\n\t}\n\treturn \"A\";\n};\n\n// TODO: TEST\nexport const getNodeById = (id) => {\n\tconst allNodes = fetchAll(\"nodes\");\n\tconst node = allNodes.find((item) => item._id === id);\n\treturn node;\n};\n\n// TODO: TEST\nexport const getNodeByName = (n) => {\n\tconst allNodes = fetchAll(\"nodes\");\n\tconst node = allNodes.find((item) => item.name === n);\n\treturn node;\n};\n\n// TODO: TEST\nexport const addNode = (data) => {\n\tconst newNode = createNode(data);\n\tif (newNode) {\n\t\tlet nodes = getAllNodes().filter((item) => item._id !== data._id);\n\t\tnodes.push(newNode);\n\t\treturn updateAndFetch(\"nodes\", nodes);\n\t} else {\n\t\treturn fetchAll(\"nodes\");\n\t}\n};\n\n// TODO: TEST\nexport const updateNode = (data) => {\n\tif (data) {\n\t\tlet tempNodes = getAllNodes().filter((item) => item._id !== data._id);\n\t\tconst newNode = createNode(data);\n\t\tif (newNode) {\n\t\t\ttempNodes.push(newNode);\n\t\t\treturn { newNode, nodes: tempNodes };\n\t\t} else {\n\t\t\treturn tempNodes;\n\t\t}\n\t}\n};\n\n// TODO: TEST\nexport const deleteNode = (_id) => {\n\tconst nodes = getAllNodes().filter((item) => item._id !== _id);\n\treturn updateAndFetch(\"nodes\", nodes);\n};\n\n//TODO: Remove\nexport const getSupportValues = (data) => {\n\tconst supportTable = {\n\t\tPin: { xSupport: 1, ySupport: 1 },\n\t\tRoller: { xSupport: 0, ySupport: 1 },\n\t};\n\tconst name = data;\n\tif (name === \"\") return { xSupport: 0, ySupport: 0 };\n\tconst values = supportTable[name];\n\treturn values;\n};\n\nexport const getSupportType = ({ xSupport, ySupport }) => {\n\tlet support = \"\";\n\tif (xSupport > 0 && ySupport > 0) {\n\t\tsupport = \"Pin\";\n\t} else if (xSupport === 0 && ySupport > 0) {\n\t\tsupport = \"Roller\";\n\t} else {\n\t\tsupport = \"\";\n\t}\n\treturn support;\n};\n\nconst _isValidData = (data) => {\n\tif (!data) return false;\n\tconst { xCoord, yCoord, xForce, yForce } = data;\n\tif (\n\t\tisNaN(Number(xCoord)) ||\n\t\tisNaN(Number(yCoord)) ||\n\t\tisNaN(Number(xForce)) ||\n\t\tisNaN(Number(yForce)) ||\n\t\tisNaN(Number(xCoord))\n\t) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\nexport const createNode = (data) => {\n\tif (_isValidData(data)) {\n\t\tconst {\n\t\t\t_id,\n\t\t\tname,\n\t\t\txCoord,\n\t\t\tyCoord,\n\t\t\txForce,\n\t\t\tyForce,\n\t\t\tsupport,\n\t\t\txDisplacement,\n\t\t\tyDisplacement,\n\t\t} = data;\n\n\t\tconst allNodes = getAllNodes(); // TODO: Refactor to contain Node objects\n\t\tconst node = new Node(\n\t\t\t_id ? _id : _generateId(),\n\t\t\tname ? name : _generateName(allNodes),\n\t\t\tnew Coordinates(xCoord, yCoord),\n\t\t\tnew Force(xForce, yForce),\n\t\t\tnew Support(support.type || support), // support.type for updating node, support for new node\n\t\t\tnew Displacement(xDisplacement, yDisplacement)\n\t\t);\n\t\treturn node;\n\t}\n\treturn null;\n};\n\nexport const setForce = (data, source) => {\n\treturn source.map((item) => {\n\t\tconst node = item;\n\t\tconst { x, y } = data[item._id];\n\t\tnode.force = new Force(x, y);\n\t\treturn node;\n\t});\n};\n\nexport const setDisplacement = (data, source) => {\n\treturn source.map((item) => {\n\t\tconst node = item;\n\t\tconst { x, y } = data[item._id];\n\t\tnode.displacement = new Displacement(x, y);\n\t\treturn node;\n\t});\n};\n\nexport const setNodeResults = (source, forces, displacements) => {\n\tlet nodes = setForce(forces, source);\n\tnodes = setDisplacement(displacements, nodes);\n\treturn nodes;\n};\n","import * as nodeController from \"./nodeController\";\nimport {\n\tfetchAll,\n\tupdateAndFetch,\n\tconvertToBarModel,\n} from \"../services/dataServices\";\nimport Bar from \"../models/Bar\";\n\nexport const getAllBars = () => {\n\tconst data = fetchAll(\"bars\");\n\tif (!data) return updateAndFetch(\"bars\", []);\n\tconst bars = convertToBarModel(data);\n\treturn bars;\n};\n\nconst _generateId = () => {\n\treturn \"_\" + Math.random().toString(36).substr(2, 9);\n};\n\nexport const getBarById = (id) => {\n\tconst bars = getAllBars();\n\tconst bar = bars.find((item) => item._id === id);\n\treturn bar ? bar : null;\n};\n\n//TODO: TEST\nexport const getBarNodes = (data) => {\n\tconst { nodeNameI, nodeNameJ } = data;\n\tconst nodeI = nodeController.getNodeByName(nodeNameI);\n\tconst nodeJ = nodeController.getNodeByName(nodeNameJ);\n\tif (nodeI && nodeJ) {\n\t\treturn {\n\t\t\tnodeI,\n\t\t\tnodeJ,\n\t\t};\n\t} else {\n\t\treturn null;\n\t}\n};\n\n/**\n * Delete all bars connected to a node\n * @param {id} id of Node\n * @returns {Array} array of updated bars\n */\nexport const deleteConnectedBars = (id) => {\n\tconst prevBars = getAllBars();\n\tconst bars = prevBars.filter(\n\t\t(item) => item.nodeI._id !== id && item.nodeJ._id !== id\n\t);\n\treturn updateAndFetch(\"bars\", bars);\n};\n\n// TODO: TEST\nexport const createBar = (data) => {\n\tconst { _id, material, section } = data;\n\t// TODO: Add dynamic dimensions for bar\n\tconst nodes = getBarNodes(data);\n\tif (nodes) {\n\t\tconst { nodeI, nodeJ } = nodes;\n\t\tconst bar = new Bar(\n\t\t\t_id ? _id : _generateId(),\n\t\t\tnodeI,\n\t\t\tnodeJ,\n\t\t\tmaterial,\n\t\t\tsection\n\t\t);\n\t\treturn bar;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport const updateBarNode = (node) => {\n\t// updated node related to bar being updated\n\tconst prevBars = getAllBars();\n\tconst bars = prevBars.map((item) => {\n\t\tif (item.nodeI._id === node._id) item.nodeI = node;\n\t\telse if (item.nodeJ._id === node._id) item.nodeJ = node;\n\t\treturn item;\n\t});\n\treturn updateAndFetch(\"bars\", bars);\n};\n\nexport const updateBar = (data) => {\n\tconst bars = getAllBars().filter((item) => item._id !== data._id);\n\tconst bar = createBar(data);\n\tif (bar) {\n\t\tlet tempBars = [...bars];\n\t\ttempBars.push(bar);\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport const addBar = (data) => {\n\tlet bars = getAllBars().filter((item) => item._id !== data._id);\n\tconst bar = createBar(data);\n\tif (bar) {\n\t\tbars.push(bar);\n\t\tupdateAndFetch(\"bars\", bars);\n\t\treturn bars;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport const deleteBar = (id) => {\n\tconst filtered = getAllBars().filter((item) => item._id !== id);\n\tconst bars = updateAndFetch(\"bars\", filtered);\n\treturn bars;\n};\n\nexport const setBarResults = (source, internalForces, stress) => {\n\tconst bars = source.map((item) => {\n\t\titem.internalForce = internalForces[item._id];\n\t\titem.stress = stress[item._id];\n\t\treturn item;\n\t});\n\treturn bars;\n};\n","const planeSize = { width: 2000, height: 2000 };\nconst origin = { x: planeSize.width / 2, y: planeSize.height / 2 };\n\nexport const calcRelativeCoord = (x, y) => {\n  const xRel = origin.x + x;\n  const yRel = planeSize.height - origin.y - y;\n  return { xRel, yRel };\n};\n\nexport const calculatePlaneSize = (nodes) => {\n  const viewBox = { width: planeSize.width, height: planeSize.height };\n  return { planeSize, viewBox };\n};\n\nexport const calcLabelPosition = (radius, xRel, yRel) => {\n  const x = xRel - radius * 2;\n  const y = yRel - radius * 1.5;\n  return { x, y };\n};\n","import axios from \"axios\";\n\n// TODO: Move to .env\n// var port = 5000;\n// axios.defaults.baseURL = \"http://localhost:\" + port;\naxios.defaults.baseURL = \"https://truss-solver-server.herokuapp.com/\";\n\nexport default {\n\tget: axios.get,\n\tpost: axios.post,\n\tput: axios.put,\n\tdelete: axios.delete,\n};\n","import CoordinatesLabel from \"./coordinatesLabel\";\nexport default CoordinatesLabel;\n","import React from \"react\";\nimport \"./coordinatesLabel.scss\";\n\nconst CoordinatesLabel = ({ placement, text }) => {\n  const { x, y } = placement;\n\n  return (\n    <text className=\"coordinatesLabel\" x={x} y={y}>\n      {text}\n    </text>\n  );\n};\nexport default CoordinatesLabel;\n","import Support from \"./support\";\nexport default Support;\n","import React from \"react\";\nimport \"./support.scss\";\nconst Support = ({ contactCoords, type, offset }) => {\n  const { xRel, yRel } = contactCoords;\n  const height = 15;\n  const width = 20;\n  const strokeWidth = 1.5;\n  const stroke = \"#000000\";\n  const fill = \"#00000000\";\n\n  const base = (\n    <>\n      <line\n        x1={`${xRel - width}`}\n        y1={`${yRel + height + offset}`}\n        x2={`${xRel + width}`}\n        y2={`${yRel + height + offset}`}\n        stroke=\"black\"\n        strokeWidth={`${strokeWidth * 1.5}`}\n      />\n    </>\n  );\n\n  const pin = (\n    <>\n      <polygon\n        points={`${xRel}            ,${yRel + offset} \n                 ${xRel - width / 2}, ${yRel + height + offset}\n                 ${xRel + width / 2},${yRel + height + offset}`}\n        fill={fill}\n        stroke={stroke}\n        strokeWidth={`${strokeWidth}`}\n      />\n      {base}\n    </>\n  );\n\n  const roller = (\n    <>\n      <circle\n        cx={xRel}\n        cy={yRel + height / 2 + offset}\n        r={height / 2}\n        fill={fill}\n        stroke={stroke}\n        strokeWidth={`${strokeWidth}`}\n      />\n      {base}\n    </>\n  );\n\n  const _getSupport = () => {\n    if (type.xSupport > 0 && type.ySupport > 0 && pin) return pin;\n    else if (type.xSupport === 0 && type.ySupport > 0) return roller;\n    else return null;\n  };\n\n  return <>{_getSupport()}</>;\n};\n\nexport default Support;\n","import Force from \"./force\";\nexport default Force;\n","import React from \"react\";\n\nconst Force = ({ xRel, yRel, direction, magnitude, style }) => {\n\tconst lineWidth = 6;\n\tconst lineLength = 20;\n\n\tconst calcAxis = () => {\n\t\treturn direction === \"x\"\n\t\t\t? { height: lineWidth, width: lineLength }\n\t\t\t: { height: lineLength, width: lineWidth };\n\t};\n\n\tconst calcDirection = () => {\n\t\tconst rotate = { transform: `rotate(180 ${xRel} ${yRel})` };\n\t\tif (direction === \"x\") return magnitude < 0 && rotate;\n\t\telse if (direction === \"y\") return magnitude > 0 && rotate;\n\t};\n\n\treturn (\n\t\t<rect\n\t\t\tstyle={style}\n\t\t\tclassName=\"force\"\n\t\t\trx=\"2.5\"\n\t\t\tx={xRel - lineWidth / 2}\n\t\t\ty={yRel - lineWidth / 2}\n\t\t\t{...calcAxis()}\n\t\t\t{...calcDirection()}\n\t\t\tfill={direction === \"x\" ? \"red\" : \"green\"}\n\t\t/>\n\t);\n};\n\nexport default Force;\n","import Point from \"./point\";\nexport default Point;\n","import React from \"react\";\nimport { Transition } from \"react-spring/renderprops\";\nimport \"./point.scss\";\n\nconst Point = ({ placement, radius, fill, isSelected }) => {\n  const center = { cx: placement.xRel, cy: placement.yRel };\n  const strokeStyle = { stroke: \"black\", strokeWidth: \"2.5\" };\n  return (\n    <g>\n      {isSelected ? (\n        <Transition\n          items={[<circle {...center} r={radius * 1.5} {...strokeStyle} />]}\n          from={{ fill: `${fill}` }}\n          enter={{ fill: \"red\" }}>\n          {(c) => c && ((props) => <g style={props}>{c}</g>)}\n        </Transition>\n      ) : (\n        <circle {...center} r={radius} {...strokeStyle} fill=\"white\" />\n      )}\n    </g>\n  );\n};\nexport default Point;\n","import Node from \"./node\";\nexport default Node;\n","import React from \"react\";\nimport {\n\tcalcRelativeCoord,\n\tcalcLabelPosition,\n} from \"../../../controllers/coordinatePlaneController\";\nimport CoordinatesLabel from \"../coordinatesLabel/index\";\nimport Support from \"../support/index\";\nimport Force from \"../force/index\";\nimport Point from \"../point/index\";\nimport { Spring } from \"react-spring/renderprops\";\nimport \"./node.scss\";\n\nconst Node = ({\n\tdata,\n\tonClick,\n\tisSelected,\n\tsize,\n\tfill,\n\tlabelOn,\n\tforcesOn,\n\tnameOn,\n\tnodeNameColor,\n\tanimation,\n}) => {\n\tconst { _id, name, coordinates, force, support } = data;\n\tconst radius = size;\n\tconst { xRel, yRel } = calcRelativeCoord(coordinates.x, coordinates.y);\n\tconst labelPlacement = calcLabelPosition(radius, xRel, yRel);\n\tconst coords = `${coordinates.x},${coordinates.y}`;\n\tconst label = `${name}${coords}`;\n\n\treturn (\n\t\t<g\n\t\t\tstyle={animation}\n\t\t\tclassName=\"clickable node\"\n\t\t\tonClick={() => onClick(_id)}>\n\t\t\t{force.x && forcesOn && (\n\t\t\t\t<Spring from={{ opacity: 0 }} to={{ opacity: 1 }} delay={500}>\n\t\t\t\t\t{(props) => (\n\t\t\t\t\t\t<Force\n\t\t\t\t\t\t\tstyle={props}\n\t\t\t\t\t\t\txRel={xRel}\n\t\t\t\t\t\t\tyRel={yRel}\n\t\t\t\t\t\t\tdirection=\"x\"\n\t\t\t\t\t\t\tmagnitude={force.x}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Spring>\n\t\t\t)}\n\t\t\t{force.y && forcesOn && (\n\t\t\t\t<Spring from={{ opacity: 0 }} to={{ opacity: 1 }} delay={500}>\n\t\t\t\t\t{(props) => (\n\t\t\t\t\t\t<Force\n\t\t\t\t\t\t\tstyle={props}\n\t\t\t\t\t\t\txRel={xRel}\n\t\t\t\t\t\t\tyRel={yRel}\n\t\t\t\t\t\t\tdirection=\"y\"\n\t\t\t\t\t\t\tmagnitude={force.y}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Spring>\n\t\t\t)}\n\t\t\t<Support\n\t\t\t\tcontactCoords={{ xRel, yRel }}\n\t\t\t\ttype={{ xSupport: support.x, ySupport: support.y }}\n\t\t\t\toffset={radius}\n\t\t\t/>\n\t\t\t<Point\n\t\t\t\tplacement={{ xRel, yRel }}\n\t\t\t\tlabel={name}\n\t\t\t\tlabelColor={nodeNameColor ? nodeNameColor : \"#000\"}\n\t\t\t\tradius={radius}\n\t\t\t\tfill={fill}\n\t\t\t\tisSelected={isSelected}\n\t\t\t\tnameOn={nameOn}\n\t\t\t/>\n\t\t\t{labelOn && <CoordinatesLabel text={label} placement={labelPlacement} />}\n\t\t</g>\n\t);\n};\n\nexport default Node;\n","import Bar from \"./bar\";\nexport default Bar;\n","import React from \"react\";\nimport { calcRelativeCoord } from \"../../../controllers/coordinatePlaneController\";\nimport \"./bar.scss\";\n\nconst Bar = ({ data, onClick, fill, width, animation }) => {\n  const { _id, nodeI, nodeJ } = data;\n  const coord1 = calcRelativeCoord(nodeI.coordinates.x, nodeI.coordinates.y);\n  const coord2 = calcRelativeCoord(nodeJ.coordinates.x, nodeJ.coordinates.y);\n  return (\n    <g className=\"bar clickable\" onClick={() => onClick(_id)} style={animation}>\n      <line\n        strokeLinecap=\"round\"\n        rx=\"5\"\n        x1={coord1.xRel}\n        y1={coord1.yRel}\n        x2={coord2.xRel}\n        y2={coord2.yRel}\n        stroke={fill}\n        strokeWidth={width}\n      />\n    </g>\n  );\n};\n\nexport default Bar;\n","import CoordinatePlane from \"./coordinatePlane\";\nexport default CoordinatePlane;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport { config, Spring } from \"react-spring/renderprops\";\nimport Node from \"../node/index\";\nimport Bar from \"../bar/index\";\nimport \"./coordinatePlane.scss\";\n\nconst CoordinatePlane = ({\n  planeSize,\n  primaryData,\n  secondaryData,\n  selectedNode,\n  onSetSelectedNode,\n  onSetSelectedBar,\n  primaryLabelsOn,\n  primaryNamesOn,\n  secondaryLabelsOn,\n  secondaryNamesOn,\n  primaryForcesOn,\n  secondaryForcesOn,\n  nodeFill,\n  nodeSize,\n  nodeNameColor,\n  barFill,\n  barSize,\n}) => {\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    setWidth(ref.current.clientWidth);\n    setHeight(ref.current.clientHeight);\n  }, [height, width]);\n\n  const renderPrimaryNodes = () =>\n    primaryData.nodes.map((item) => (\n      <Spring key={item._id} from={{ opacity: 0.1 }} to={{ opacity: 1 }}>\n        {(props) => (\n          <Node\n            animation={props}\n            data={item}\n            onClick={onSetSelectedNode}\n            isSelected={item._id === selectedNode._id}\n            fill={nodeFill}\n            size={nodeSize[0]}\n            nameOn={primaryNamesOn}\n            nodeNameColor={nodeNameColor}\n            labelOn={primaryLabelsOn}\n            forcesOn={primaryForcesOn}\n          />\n        )}\n      </Spring>\n    ));\n\n  const renderPrimaryBars = () =>\n    primaryData.bars.map((item) => {\n      return (\n        <Spring key={item._id} from={{ opacity: 0.1 }} to={{ opacity: 1 }}>\n          {(props) => (\n            <Bar\n              animation={props}\n              data={item}\n              onClick={onSetSelectedBar}\n              fill={barFill[0]}\n              width={barSize[0]}\n            />\n          )}\n        </Spring>\n      );\n    });\n\n  // TODO: Remove support rendering\n  const renderSecondaryNodes = () =>\n    secondaryData &&\n    secondaryData.nodes.map((item, index) => {\n      const { x, y } = item.displacement;\n      return (\n        <Spring\n          key={index}\n          from={{\n            transform: `translate3d(${-x}px,${y}px,0)`,\n          }}\n          to={{\n            transform: `translate3d(0px,0px,0)`,\n          }}\n          config={config.wobbly}\n          delay={500}>\n          {(props) => (\n            <Node\n              animation={props}\n              data={item}\n              onClick={() => {}}\n              isSelected={item._id === selectedNode._id}\n              fill=\"orange\"\n              size={nodeSize[1]}\n              nameOn={secondaryNamesOn}\n              labelOn={secondaryLabelsOn}\n              forcesOn={secondaryForcesOn}\n            />\n          )}\n        </Spring>\n      );\n    });\n\n  const renderSecondaryBars = () =>\n    secondaryData &&\n    secondaryData.bars.map((item, index) => (\n      <Spring\n        key={index}\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        delay={750}\n        config={config.slow}>\n        {(props) => (\n          <Bar\n            animation={props}\n            data={item}\n            onClick={() => {}}\n            fill={barFill[1]}\n            width={barSize[1]}\n          />\n        )}\n      </Spring>\n    ));\n\n  return (\n    <div id=\"coordinatePlane\" ref={ref}>\n      <TransformWrapper\n        defaultScale={1}\n        options={{ limitToBounds: false }}\n        defaultPositionX={-(planeSize.width / 4 + width)}\n        defaultPositionY={-(planeSize.height / 4 - height)}\n        doubleClick={{ mode: \"zoomOut\" }}>\n        <TransformComponent>\n          <svg width={planeSize.width} height={planeSize.height}>\n            <React.Fragment>{renderPrimaryBars()}</React.Fragment>\n            <React.Fragment>{renderPrimaryNodes()}</React.Fragment>\n            <React.Fragment>{renderSecondaryBars()}</React.Fragment>\n            <React.Fragment> {renderSecondaryNodes()}</React.Fragment>\n          </svg>\n        </TransformComponent>\n      </TransformWrapper>\n    </div>\n  );\n};\n\nexport default CoordinatePlane;\n","import ActionButton from \"./actionButton\";\nexport default ActionButton;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport \"./actionButton.scss\";\n\nconst ActionButton = ({ label, onClick, color }) => {\n  return (\n    <Button className=\"w-100 mt-1\" size=\"sm\" onClick={onClick} color={color}>\n      {label}\n    </Button>\n  );\n};\n\nexport default ActionButton;\n","import InputFormGroup from \"./inputFormGroup\";\nexport default InputFormGroup;\n","import React from \"react\";\nimport { Input, FormGroup, Label } from \"reactstrap\";\nimport \"./inputFormGroup.scss\";\nconst InputFormGroup = ({\n  name,\n  label,\n  type,\n  value,\n  onChange,\n  placeholder,\n  disabled,\n}) => {\n  return (\n    <div className=\"inputFormGroup\">\n      <FormGroup>\n        {label && <Label for={name}>{label}</Label>}\n        <Input\n          bsSize=\"sm\"\n          type={type}\n          name={name}\n          value={value}\n          onChange={onChange}\n          placeholder={placeholder}\n          disabled={disabled}\n        />\n      </FormGroup>\n    </div>\n  );\n};\nexport default InputFormGroup;\n","import Menu from \"./menu\";\nexport default Menu;\n","import React, { useState } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport \"./menu.scss\";\n\nconst Menu = ({ options, name, label, selected, onChange, disabled }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen((prevState) => !prevState);\n  return (\n    <Dropdown\n      className=\"mb-2\"\n      disabled={disabled}\n      isOpen={isOpen}\n      toggle={toggle}\n      size=\"sm\"\n    >\n      <DropdownToggle\n        color={disabled ? \"outline-secondary\" : \"outline-primary\"}\n        size=\"sm\"\n        className=\"col-12\"\n        caret\n      >\n        {selected ? selected : label}\n      </DropdownToggle>\n      <DropdownMenu>\n        {options.map((item) => (\n          <DropdownItem key={item} name={name} value={item} onClick={onChange}>\n            {item}\n          </DropdownItem>\n        ))}\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\nexport default Menu;\n","import React, { Component } from \"react\";\nimport InputFormGroup from \"../inputFormGroup/index\";\nimport { Button } from \"reactstrap\";\nimport Menu from \"../menu/index\";\nimport ActionButton from \"../actionButton/index\";\nimport \"./form.scss\";\n\nclass Form extends Component {\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const { data } = { ...this.state };\n    const { value, name } = input;\n    data[name] = value;\n    this.setState({ data });\n    if (value) this.doUpdate();\n  };\n\n  renderInputFormGroup = (\n    name,\n    label,\n    type,\n    value,\n    onChange,\n    placeholder,\n    disabled\n  ) => {\n    return (\n      <InputFormGroup\n        name={name}\n        label={label}\n        type={type}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    );\n  };\n\n  renderSubmitBtn = (label, disabled) => {\n    return (\n      <Button\n        color={disabled ? \"secondary\" : \"primary\"}\n        size=\"sm\"\n        type=\"submit\"\n        disabled={disabled}\n        className=\"w-100\">\n        {label}\n      </Button>\n    );\n  };\n\n  renderDropdownMenu = (options, name, label, selected, onChange, disabled) => {\n    return (\n      <Menu\n        options={options}\n        name={name}\n        label={label}\n        selected={selected}\n        onChange={onChange}\n        disabled={disabled}\n      />\n    );\n  };\n\n  renderActionButton = (label, onClick, color) => {\n    return <ActionButton label={label} onClick={onClick} color={color} />;\n  };\n}\n\nexport default Form;\n","import nodeForm from \"./nodeForm\";\nexport default nodeForm;\n","import React from \"react\";\nimport { Label } from \"reactstrap\";\nimport Form from \"../common/form/form\";\nimport \"./nodeForm.scss\";\nclass NodeForm extends Form {\n\tstate = {\n\t\tdata: {\n\t\t\t_id: \"\",\n\t\t\tname: \"\",\n\t\t\txCoord: 0,\n\t\t\tyCoord: 0,\n\t\t\txForce: 0,\n\t\t\tyForce: 0,\n\t\t\tsupport: \"None\",\n\t\t},\n\t\tsupportOptions: [\"Pin\", \"Roller\", \"None\"],\n\t\terrors: {},\n\t};\n\n\t_initializeForm() {\n\t\tlet data = {\n\t\t\t_id: \"\",\n\t\t\tname: \"\",\n\t\t\txCoord: 0,\n\t\t\tyCoord: 0,\n\t\t\txForce: 0,\n\t\t\tyForce: 0,\n\t\t\tsupport: \"None\",\n\t\t};\n\t\tthis.setState({ data });\n\t\tthis.setState({ support: \"\" });\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst { data: prevData } = prevProps;\n\t\tconst { data: newData } = this.props;\n\t\tif (newData._id && prevData._id !== newData._id) {\n\t\t\tlet data = { ...newData };\n\t\t\tdata.xCoord = newData.coordinates.x;\n\t\t\tdata.yCoord = newData.coordinates.y;\n\t\t\tdata.xForce = newData.force.x;\n\t\t\tdata.yForce = newData.force.y;\n\t\t\tdata.support = newData.support.type;\n\t\t\tdelete data[\"coordinates\"];\n\t\t\tdelete data[\"force\"];\n\t\t\tdelete data[\"displacement\"];\n\t\t\tthis.setState({ data });\n\t\t}\n\t}\n\n\tdoDelete(_id) {\n\t\tthis.props.onDeleteNode(_id);\n\t\tthis._initializeForm();\n\t}\n\n\tdoUpdate() {\n\t\tthis.props.onUpdateNode(this.state.data);\n\t}\n\n\tdoSubmit() {\n\t\tthis.props.onAddNode(this.state.data);\n\t\tthis._initializeForm();\n\t\t// else add error for particular input\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t_id,\n\t\t\tname,\n\t\t\txCoord,\n\t\t\tyCoord,\n\t\t\txForce,\n\t\t\tyForce,\n\t\t\tsupport,\n\t\t} = this.state.data;\n\n\t\tconst { supportOptions: options } = this.state;\n\n\t\treturn (\n\t\t\t<div id=\"nodeForm\" className=\"w-100\">\n\t\t\t\t<h4>Nodes</h4>\n\t\t\t\t{name && <Label>Name: {name}</Label>}\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Label>Coordinates</Label>\n\t\t\t\t\t{this.renderInputFormGroup(\n\t\t\t\t\t\t\"xCoord\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\txCoord,\n\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\t\"X-Coordinate\"\n\t\t\t\t\t)}\n\t\t\t\t\t{this.renderInputFormGroup(\n\t\t\t\t\t\t\"yCoord\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\tyCoord,\n\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\t\"Y-Coordinate\"\n\t\t\t\t\t)}\n\t\t\t\t\t<Label>Forces</Label>\n\t\t\t\t\t{this.renderInputFormGroup(\n\t\t\t\t\t\t\"xForce\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\txForce,\n\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\t\"X-Component\",\n\t\t\t\t\t\t_id ? false : true\n\t\t\t\t\t)}\n\t\t\t\t\t{this.renderInputFormGroup(\n\t\t\t\t\t\t\"yForce\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\"number\",\n\t\t\t\t\t\tyForce,\n\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\t\"Y-Component\",\n\t\t\t\t\t\t_id ? false : true\n\t\t\t\t\t)}\n\t\t\t\t\t<Label>Support Type</Label>\n\t\t\t\t\t{this.renderDropdownMenu(\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\"support\",\n\t\t\t\t\t\t\"Support\",\n\t\t\t\t\t\tsupport,\n\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\t_id ? false : true\n\t\t\t\t\t)}\n\t\t\t\t\t{this.renderSubmitBtn(_id ? \"Update\" : \"Add\")}\n\t\t\t\t\t{_id\n\t\t\t\t\t\t? this.renderActionButton(\n\t\t\t\t\t\t\t\t\"Delete\",\n\t\t\t\t\t\t\t\t() => this.doDelete(_id),\n\t\t\t\t\t\t\t\t\"danger\"\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: null}\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NodeForm;\n","import barForm from './barForm';\nexport default barForm;\n","import React from \"react\";\nimport \"./barForm.scss\";\nimport { Label } from \"reactstrap\";\nimport Form from \"../common/form/index\";\n\n// TODO: Add dynamic dimensions for bar\nclass BarForm extends Form {\n\tstate = {\n\t\tdata: {\n\t\t\t_id: \"\",\n\t\t\tnodeNameI: \"\",\n\t\t\tnodeNameJ: \"\",\n\t\t\tmaterial: \"Steel\",\n\t\t\tsection: \"Circular\",\n\t\t},\n\t\terrors: {},\n\t};\n\n\tcomponentDidMount() {\n\t\tthis._initializeForm();\n\t}\n\n\tcomponentDidUpdate(prev) {\n\t\tconst current = this.props.data;\n\t\tif (prev.data._id !== current._id) {\n\t\t\tconst { _id, nodeI, nodeJ, material, section } = current;\n\t\t\tconst data = {\n\t\t\t\t_id,\n\t\t\t\tnodeNameI: nodeI.name,\n\t\t\t\tnodeNameJ: nodeJ.name,\n\t\t\t\tmaterial: material._type,\n\t\t\t\tsection: section.type,\n\t\t\t};\n\t\t\tthis.setState({ data });\n\t\t}\n\t}\n\n\t_initializeForm() {\n\t\tconst data = {\n\t\t\t_id: \"\",\n\t\t\tnodeNameI: \"\",\n\t\t\tnodeNameJ: \"\",\n\t\t\tmaterial: \"Steel\",\n\t\t\tsection: \"Circular\",\n\t\t};\n\t\tthis.setState({ data });\n\t}\n\n\tdoUpdate = () => {\n\t\tthis.props.onUpdateBar(this.state.data);\n\t};\n\n\tdoSubmit = () => {\n\t\tthis.props.onAddBar(this.state.data);\n\t\tthis._initializeForm();\n\t};\n\n\tdoDelete = () => {\n\t\tthis.props.onDeleteBar(this.state.data._id);\n\t\tthis._initializeForm();\n\t};\n\n\tisDisabled = (nodeNameI, nodeNameJ) => {\n\t\treturn nodeNameI && nodeNameJ ? false : true;\n\t};\n\trender() {\n\t\tconst { _id, nodeNameI, nodeNameJ, material, section } = this.state.data;\n\t\treturn (\n\t\t\t<div id=\"barForm\" className=\"w-100\">\n\t\t\t\t<h4 className=\"mt-2\">Bars</h4>\n\t\t\t\t<Label>Nodes</Label>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t{this.renderInputFormGroup(\n\t\t\t\t\t\t\"nodeNameI\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"text\",\n\t\t\t\t\t\tnodeNameI,\n\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\t\"Node 1\"\n\t\t\t\t\t)}\n\t\t\t\t\t{this.renderInputFormGroup(\n\t\t\t\t\t\t\"nodeNameJ\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"text\",\n\t\t\t\t\t\tnodeNameJ,\n\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\t\"Node 2\"\n\t\t\t\t\t)}\n\t\t\t\t\t{this.renderDropdownMenu(\n\t\t\t\t\t\t[\"Steel\", \"Wood\"],\n\t\t\t\t\t\t\"material\",\n\t\t\t\t\t\t\"Material\",\n\t\t\t\t\t\tmaterial,\n\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\tthis.isDisabled(nodeNameI, nodeNameJ)\n\t\t\t\t\t)}\n\t\t\t\t\t{this.renderDropdownMenu(\n\t\t\t\t\t\t[\"Rectangular\", \"Circular\"],\n\t\t\t\t\t\t\"section\",\n\t\t\t\t\t\t\"Section\",\n\t\t\t\t\t\tsection,\n\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\tthis.isDisabled(nodeNameI, nodeNameJ)\n\t\t\t\t\t)}\n\n\t\t\t\t\t{this.renderSubmitBtn(\n\t\t\t\t\t\t_id ? \"Update\" : \"Add\",\n\t\t\t\t\t\tthis.isDisabled(nodeNameI, nodeNameJ)\n\t\t\t\t\t)}\n\t\t\t\t\t{_id\n\t\t\t\t\t\t? this.renderActionButton(\"Delete\", this.doDelete, \"danger\")\n\t\t\t\t\t\t: null}\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BarForm;\n","import Form from \"./form\";\nexport default Form;\n","import TrussSolver from \"./trussSolver\";\nexport default TrussSolver;\n","import React, { useState } from \"react\";\nimport * as nodeController from \"../../controllers/nodeController\";\nimport * as barController from \"../../controllers/barController\";\nimport * as data from \"../../services/dataServices\";\nimport { calculatePlaneSize } from \"../../controllers/coordinatePlaneController\";\nimport http from \"../../services/httpServices\";\nimport CoordinatePlane from \"../common/coordinatePlane/index\";\nimport ActionButton from \"../common/actionButton/index\";\nimport NodeForm from \"../nodeForm/index\";\nimport BarForm from \"../barForm/index\";\nimport \"./trussSolver.scss\";\n\nconst TrussSolver = (props) => {\n\tconst [displayNodes, setDisplayNodes] = useState(\n\t\tdata.convertToNodeModel(nodeController.getAllNodes())\n\t);\n\tconst [displayBars, setDisplayBars] = useState(\n\t\tdata.convertToBarModel(barController.getAllBars())\n\t);\n\n\tconst [selectedNode, setSelectedNode] = useState({ id: \"\" });\n\tconst [selectedBar, setSelectedBar] = useState({ id: \"\" });\n\n\tconst handleAddNode = (data) => {\n\t\tconst nodes = nodeController.addNode(data);\n\t\tsetDisplayNodes(nodes);\n\t\tsetSelectedNode({ id: \"\" });\n\t};\n\n\tconst handleUpdateNode = (data) => {\n\t\tconst { nodes, newNode } = nodeController.updateNode(data);\n\t\tsetDisplayNodes(nodes);\n\t\tconst bars = barController.updateBarNode(newNode);\n\t\tsetDisplayBars(bars);\n\t};\n\n\tconst handleSetSelectedNode = (id) => {\n\t\tconst node = nodeController.getNodeById(id);\n\t\tsetSelectedNode(node);\n\t};\n\n\tconst handleDeleteNode = (id) => {\n\t\tconst nodes = nodeController.deleteNode(id);\n\t\tsetDisplayNodes(nodes);\n\t\tconst bars = barController.deleteConnectedBars(id);\n\t\tsetDisplayBars(bars);\n\t\tsetSelectedNode({ id: \"\" });\n\t};\n\n\tconst handleUpdateBar = (data) => {\n\t\tconst bars = barController.updateBar(data);\n\t\tif (bars) setDisplayBars(bars);\n\t};\n\n\tconst handleAddBar = (data) => {\n\t\tconst bars = barController.addBar(data);\n\t\tif (bars) setDisplayBars(bars);\n\t};\n\n\tconst handleSetSelectedBar = (id) => {\n\t\tconst bar = barController.getBarById(id);\n\t\tsetSelectedBar(bar);\n\t\thandleUpdateBar(bar);\n\t};\n\n\tconst handleDeleteBar = (id) => {\n\t\tconst bars = barController.deleteBar(id);\n\t\tsetDisplayBars(bars);\n\t};\n\n\tconst handleResetAll = () => {\n\t\tsetDisplayBars([]);\n\t\tsetDisplayNodes([]);\n\t\tsetSelectedNode({ id: \"\" });\n\t\tdata.resetAll();\n\t};\n\n\tconst handleCalculate = () => {\n\t\thttp\n\t\t\t.post(\"api/calculate\", {\n\t\t\t\tnodes: displayNodes,\n\t\t\t\tbars: displayBars,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconst resultantNodes = nodeController.setNodeResults(\n\t\t\t\t\tdisplayNodes,\n\t\t\t\t\tres.data.forces,\n\t\t\t\t\tres.data.displacement\n\t\t\t\t);\n\n\t\t\t\tconst resultantBars = barController.setBarResults(\n\t\t\t\t\tdisplayBars,\n\t\t\t\t\tres.data.internal,\n\t\t\t\t\tres.data.stress\n\t\t\t\t);\n\n\t\t\t\tprops.history.push({\n\t\t\t\t\tpathname: \"/truss-solver/results\",\n\t\t\t\t\tstate: { resultantNodes, resultantBars },\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t\talert(\"Please double check input members.\");\n\t\t\t});\n\t};\n\n\tconst memberStyles = {\n\t\tnodeNameColor: \"#0000ff\",\n\t\tnodeSize: [4, 4],\n\t\tnodeFill: \"white\",\n\t\tbarSize: [4, 4],\n\t\tbarFill: [\"gray\", \"#0000ff2f\"],\n\t};\n\n\tconst { planeSize, viewBox } = calculatePlaneSize(displayNodes);\n\treturn (\n\t\t<div\n\t\t\tid=\"trussSolver\"\n\t\t\tclassName=\"d-flex justify-self-center justify-space-between m-2\">\n\t\t\t<div className=\"forms container d-flex flex-column justify-content-between col-2\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<NodeForm\n\t\t\t\t\t\tcontroller={nodeController}\n\t\t\t\t\t\tonAddNode={(data) => handleAddNode(data)}\n\t\t\t\t\t\tonUpdateNode={(data) => handleUpdateNode(data)}\n\t\t\t\t\t\tonDeleteNode={(data) => handleDeleteNode(data)}\n\t\t\t\t\t\tdata={selectedNode}\n\t\t\t\t\t/>\n\t\t\t\t\t<BarForm\n\t\t\t\t\t\tcontroller={barController}\n\t\t\t\t\t\tonAddBar={(data) => handleAddBar(data)}\n\t\t\t\t\t\tonUpdateBar={(data) => handleUpdateBar(data)}\n\t\t\t\t\t\tonDeleteBar={(data) => handleDeleteBar(data)}\n\t\t\t\t\t\tdata={selectedBar}\n\t\t\t\t\t/>\n\t\t\t\t\t<ActionButton\n\t\t\t\t\t\tlabel=\"Calculate\"\n\t\t\t\t\t\tonClick={handleCalculate}\n\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<ActionButton label=\"Reset\" onClick={handleResetAll} color=\"danger\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"col-10\">\n\t\t\t\t<CoordinatePlane\n\t\t\t\t\tviewBox={viewBox}\n\t\t\t\t\tplaneSize={planeSize}\n\t\t\t\t\tprimaryData={{ nodes: displayNodes, bars: displayBars }}\n\t\t\t\t\tsecondaryData={null}\n\t\t\t\t\tselectedNode={selectedNode}\n\t\t\t\t\tselectedBar={selectedBar}\n\t\t\t\t\tonSetSelectedNode={(id) => handleSetSelectedNode(id)}\n\t\t\t\t\tonSetSelectedBar={(id) => handleSetSelectedBar(id)}\n\t\t\t\t\tprimaryLabelsOn={true}\n\t\t\t\t\tprimaryNamesOn={true}\n\t\t\t\t\tprimaryForcesOn={true}\n\t\t\t\t\t{...memberStyles}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TrussSolver;\n","import TableHeader from \"./tableHeader\";\nexport default TableHeader;\n","import React from \"react\";\nimport \"./tableHeader.scss\";\n\nconst TableHeader = ({ columns }) => {\n  return (\n    <thead>\n      <tr>\n        {columns.map((col) => (\n          <th scope=\"col\" key={col.label}>\n            {col.label}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default TableHeader;\n","import TableBody from \"./tableBody\";\nexport default TableBody;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport \"./tableBody.scss\";\n\nconst TableBody = ({ data, columns }) => {\n  return (\n    <tbody>\n      {data.map((item) => (\n        <tr key={item._id}>\n          {columns.map((col) => {\n            const val = _.get(item, col.path);\n            return col.content ? (\n              <td key={col.key}>{col.content(val)}</td>\n            ) : (\n              <td key={col.path}>{isNaN(val) ? val : val.toFixed(2)}</td>\n            );\n          })}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\nexport default TableBody;\n","import Table from \"./table\";\nexport default Table;\n","import React from \"react\";\nimport TableHeader from \"../tableHeader/index\";\nimport TableBody from \"../tableBody/index\";\nimport \"./table.scss\";\n\nconst Table = ({ columns, data, header }) => {\n  return (\n    <div>\n      <h4>{header}</h4>\n      <table className=\"table table-bordered table-sm\">\n        <TableHeader columns={columns} />\n        <TableBody columns={columns} data={data} />\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import DisplacementTable from \"./displacementTable\";\nexport default DisplacementTable;\n","import React from \"react\";\nimport Table from \"../common/table/index\";\nimport \"./displacementTable.scss\";\n\nconst DisplacementTable = ({ data }) => {\n  const columns = [\n    { path: \"name\", label: \"Name\" },\n    { path: \"displacement.x\", label: \"X\" },\n    { path: \"displacement.y\", label: \"Y\" },\n  ];\n  const header = \"Displacements\";\n  return <Table columns={columns} data={data} header={header} />;\n};\nexport default DisplacementTable;\n","import React from \"react\";\nimport Table from \"../common/table/index\";\nimport \"./forcesTable.scss\";\n\nconst ForcesTable = ({ data }) => {\n  const columns = [\n    { path: \"name\", label: \"Name\" },\n    { path: \"force.x\", label: \"X\" },\n    { path: \"force.y\", label: \"Y\" },\n  ];\n\n  const header = \"Forces\";\n  return <Table columns={columns} data={data} header={header} />;\n};\n\nexport default ForcesTable;\n","import StressTable from \"./stressTable\";\nexport default StressTable;\n","import React from \"react\";\nimport Table from \"../common/table/index\";\nimport \"./stressTable.scss\";\n\nconst StressTable = ({ data }) => {\n  const columns = [\n    { path: \"name\", label: \"Name\" },\n    { path: \"stress\", label: \"Mag.\" },\n    {\n      key: \"type\",\n      path: \"stress\",\n      content: (val) => getType(val),\n      label: \"Type\",\n    },\n  ];\n  const header = \"Stress\";\n  const getType = (val) => {\n    return val < 0 ? \"C\" : \"T\";\n  };\n  return <Table columns={columns} data={data} header={header} />;\n};\nexport default StressTable;\n","import React from \"react\";\nimport Table from \"../common/table/index\";\nimport \"./internalForcesTable.scss\";\n\nconst InternalForcesTable = ({ data }) => {\n  const columns = [\n    { path: \"name\", label: \"Name\" },\n    { path: \"stress\", label: \"Mag.\" },\n  ];\n  const header = \"Internal Forces\";\n\n  return <Table columns={columns} data={data} header={header} />;\n};\nexport default InternalForcesTable;\n","import Results from \"./results\";\nexport default Results;\n","import React from \"react\";\nimport * as nodeController from \"../../controllers/nodeController\";\nimport * as barController from \"../../controllers/barController\";\nimport * as data from \"../../services/dataServices\";\nimport * as planeController from \"../../controllers/coordinatePlaneController\";\nimport CoordinatePlane from \"../common/coordinatePlane/index\";\nimport ActionButton from \"../common/actionButton\";\nimport DisplacementTable from \"../displacementTable\";\nimport ForcesTable from \"../forcesTable/forcesTable\";\nimport \"./results.scss\";\nimport StressTable from \"../stressTable/index\";\nimport InternalForcesTable from \"../internalForcesTable/internalForcesTable\";\n\nconst Results = (props) => {\n  const existingNodes = nodeController.getAllNodes();\n  const existingBars = barController.getAllBars();\n  const { resultantNodes, resultantBars } = props.history.location.state;\n  const { planeSize, viewBox } = planeController.calculatePlaneSize(\n    existingNodes\n  );\n\n  // exaggerate displacements\n  const exagNodeResults = data.exaggerate(resultantNodes, 40);\n\n  // update bar results\n  const exagBarResults = data.createBarResults(resultantBars, exagNodeResults);\n\n  const memberStyles = {\n    nodeSize: [4, 4],\n    nodeFill: \"white\",\n    barSize: [6, 6],\n    barFill: [\"gray\", \"#0000ff5f\"],\n  };\n\n  return (\n    <div\n      id=\"results\"\n      className=\"d-flex justify-self-center justify-space-between m-2\">\n      <div className=\"col-2\">\n        <DisplacementTable data={resultantNodes} />\n        <ForcesTable data={resultantNodes} />\n        <StressTable data={resultantBars} />\n        <InternalForcesTable data={resultantBars} />\n        <ActionButton\n          onClick={() => props.history.push(\"/truss-solver\")}\n          label=\"Edit Members\"\n          color=\"warning\"\n        />\n      </div>\n\n      <div className=\"col-10\">\n        <CoordinatePlane\n          viewBox={viewBox}\n          planeSize={planeSize}\n          primaryData={{ nodes: existingNodes, bars: existingBars }}\n          secondaryData={{ nodes: exagNodeResults, bars: exagBarResults }}\n          selectedNode={{ id: \"\" }}\n          onSetSelectedNode={() => {}}\n          onSetSelectedBar={() => {}}\n          primaryLabelsOn={false}\n          primaryNamesOn={false}\n          primaryForcesOn={false}\n          secondaryLabelsOn={true}\n          secondaryForcesOn={true}\n          secondaryNamesOn={false}\n          {...memberStyles}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport TrussSolver from \"./components/trussSolver/index\";\nimport Results from \"./components/results/index\";\nimport \"./styles/_global.scss\";\nimport \"./App.css\";\n\nconst App = () => {\n  const baseRoute = \"/truss-solver/\";\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route\n          exact\n          path={`${baseRoute}`}\n          component={(props) => <TrussSolver {...props} />}\n        />\n        <Route\n          path={`${baseRoute}results`}\n          render={(props) => <Results {...props} />}\n        />\n        <Redirect from={`/*`} to={`${baseRoute}`} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}