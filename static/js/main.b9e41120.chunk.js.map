{"version":3,"sources":["models/Resultant.js","models/Force.js","models/Coordinates.js","models/Support.js","models/Displacement.js","models/Node.js","models/Material.js","models/Section.js","models/Circular.js","models/Rectangular.js","models/Bar.js","services/dataServices.js","controllers/nodeController.js","controllers/barController.js","controllers/coordinatePlaneController.js","services/httpServices.js","components/common/coordinatesLabel/index.js","components/common/coordinatesLabel/coordinatesLabel.jsx","components/common/support/index.js","components/common/support/support.jsx","components/common/force/index.js","components/common/force/force.jsx","components/common/point/index.js","components/common/point/point.jsx","components/common/node/index.js","components/common/node/node.jsx","components/common/bar/index.js","components/common/bar/bar.jsx","components/common/coordinatePlane/index.js","components/common/coordinatePlane/coordinatePlane.jsx","components/common/actionButton/index.js","components/common/actionButton/actionButton.jsx","components/common/inputFormGroup/index.js","components/common/inputFormGroup/inputFormGroup.jsx","components/common/menu/index.js","components/common/menu/menu.jsx","components/common/form/form.jsx","components/nodeForm/index.js","components/nodeForm/nodeForm.jsx","components/barForm/index.js","components/barForm/barForm.jsx","components/common/form/index.js","components/trussSolver/index.js","components/trussSolver/trussSolver.jsx","components/common/tableHeader/index.js","components/common/tableHeader/tableHeader.jsx","components/common/tableBody/index.js","components/common/tableBody/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","components/displacementTable/index.js","components/displacementTable/displacementTable.jsx","components/forcesTable/forcesTable.jsx","components/stressTable/index.js","components/stressTable/stressTable.jsx","components/internalForcesTable/internalForcesTable.jsx","components/results/index.js","components/results/results.jsx","App.js","index.js"],"names":["Resultant","_x","_y","this","x","Number","y","Math","sqrt","Force","Coordinates","Support","_type","Roller","Pin","None","support","type","Displacement","Node","_id","name","coordinate","force","displacement","coordinates","Material","Steel","index","rating","Wood","mat","_index","_rating","val","Section","Circular","radius","_radius","area","PI","Rectangular","_height","_width","height","width","Bar","id","nodeI","nodeJ","material","section","internalForce","stress","xi","yi","xj","yj","a","abs","b","fetchAll","key","JSON","parse","localStorage","getItem","updateAll","data","setItem","stringify","convertToNodeModel","map","item","e","convertToBarModel","getAllNodes","error","console","_generateId","random","toString","substr","_generateName","nodes","length","names","charCodeAt","String","fromCharCode","max","getNodeById","find","getNodeByName","n","addNode","newNode","createNode","filter","push","updateNode","tempNodes","deleteNode","getSupportValues","xSupport","ySupport","getSupportType","xCoord","yCoord","xForce","yForce","isNaN","_isValidData","xDisplacement","yDisplacement","allNodes","setForce","source","node","setDisplacement","setNodeResults","forces","displacements","getAllBars","getBarById","bar","getBarNodes","nodeNameI","nodeNameJ","nodeController","deleteConnectedBars","bars","createBar","updateBarNode","updateBar","addBar","deleteBar","setBarResults","internalForces","planeSize","origin","calcRelativeCoord","xRel","yRel","calculatePlaneSize","viewBox","axios","defaults","baseURL","get","post","put","delete","CoordinatesLabel","placement","text","className","contactCoords","offset","base","x1","y1","x2","y2","stroke","strokeWidth","pin","points","fill","roller","cx","cy","r","direction","magnitude","style","rx","lineWidth","rotate","transform","calcDirection","Point","isSelected","center","strokeStyle","items","from","enter","c","props","onClick","size","labelOn","forcesOn","nameOn","nodeNameColor","animation","labelPlacement","calcLabelPosition","label","opacity","to","delay","labelColor","coord1","coord2","strokeLinecap","CoordinatePlane","primaryData","secondaryData","selectedNode","onSetSelectedNode","onSetSelectedBar","primaryLabelsOn","primaryNamesOn","secondaryLabelsOn","secondaryNamesOn","primaryForcesOn","secondaryForcesOn","nodeFill","nodeSize","barFill","barSize","useState","setWidth","setHeight","ref","useRef","useEffect","current","clientWidth","clientHeight","defaultScale","options","limitToBounds","defaultPositionX","defaultPositionY","doubleClick","mode","Fragment","config","slow","wobbly","ActionButton","color","Button","InputFormGroup","value","onChange","placeholder","disabled","FormGroup","Label","for","Input","bsSize","Menu","selected","isOpen","setIsOpen","Dropdown","toggle","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","Form","handleSubmit","event","preventDefault","doSubmit","handleChange","input","currentTarget","state","setState","doUpdate","renderInputFormGroup","renderSubmitBtn","renderDropdownMenu","renderActionButton","Component","nodeForm","supportOptions","errors","prevProps","prevData","newData","onDeleteNode","_initializeForm","onUpdateNode","onAddNode","onSubmit","doDelete","barForm","onUpdateBar","onAddBar","isDisabled","onDeleteBar","TrussSolver","displayNodes","setDisplayNodes","barController","displayBars","setDisplayBars","setSelectedNode","selectedBar","setSelectedBar","handleUpdateBar","controller","handleAddNode","handleUpdateNode","handleDeleteNode","handleAddBar","handleDeleteBar","http","then","res","resultantNodes","resultantBars","internal","history","pathname","catch","log","alert","clear","handleSetSelectedNode","handleSetSelectedBar","TableHeader","columns","col","scope","TableBody","_","path","content","toFixed","Table","header","DisplacementTable","ForcesTable","StressTable","getType","InternalForcesTable","Results","existingNodes","existingBars","location","planeController","exagNodeResults","xDis","yDis","exagBarResults","lookup","forEach","App","exact","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b9e41120.chunk.js","sourcesContent":["export default class Resultant {\n  constructor(_x = 0, _y = 0) {\n    this.x = Number(_x);\n    this.y = Number(_y);\n  }\n\n  get resultant() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n}\n","import Resultant from \"./Resultant\";\n\nexport default class Force extends Resultant {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n  }\n}\n","import Resultant from \"./Resultant\";\n\nexport default class Coordinates extends Resultant {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n  }\n}\n","export default class Support {\n  #supportValues = {\n    Roller: { x: 0, y: 1 },\n    Pin: { x: 1, y: 1 },\n    None: { x: 0, y: 0 },\n  };\n\n  constructor(_type) {\n    const support = this.#supportValues[_type];\n    this.type = support ? _type : \"None\";\n    this.x = this.#supportValues[this.type].x;\n    this.y = this.#supportValues[this.type].y;\n  }\n}\n","import Resultant from \"./Resultant\";\n\nexport default class Displacement extends Resultant {\n  constructor(x = 0, y = 0) {\n    super(x, y);\n  }\n}\n","import Force from \"./Force\";\nimport Coordinates from \"./Coordinates\";\nimport Support from \"./Support\";\nimport Displacement from \"./Displacement\";\n\nexport default class Node {\n  constructor(_id, name, coordinate, force, support, displacement) {\n    this._id = _id;\n    this.name = name;\n    this.coordinates = new Coordinates(coordinate.x, coordinate.y);\n    this.force = new Force(force.x, force.y);\n    this.support = new Support(support.type);\n    this.displacement = new Displacement(displacement.x, displacement.y);\n  }\n}\n","// TODO: Fix Class\nexport default class Material {\n  #materials = {\n    Steel: { index: 1, rating: 29000 },\n    Wood: { index: 3, rating: 4200 },\n  };\n\n  constructor(type) {\n    this._type = type;\n    const mat = this.#materials[this._type];\n    if (mat) {\n      this._index = mat.index;\n      this._rating = mat.rating;\n    } else {\n      this._index = 0;\n      this._rating = 0;\n    }\n  }\n\n  /** This method should not be used, outside class.\n   * Implementation is only limited to two types of material\n   */\n  set index(val) {\n    this._index = val;\n    this._rating =\n      val === 1\n        ? this.#materials[\"Steel\"].rating\n        : this.#materials[\"Wood\"].rating;\n    this.type = val === 1 ? \"Steel\" : \"Wood\";\n  }\n\n  get index() {\n    return this._index;\n  }\n\n  /** This method should not be used, outside class.\n   * Implementation is only limited to two types of material\n   */\n  set rating(val) {\n    this._rating = val;\n    this._index = val === 29000 ? 1 : 3;\n    this.type = val === 29000 ? \"Steel\" : \"Wood\";\n  }\n\n  get rating() {\n    return this._rating;\n  }\n\n  set type(val) {\n    this._type = val;\n    const mat = this.#materials[this._type];\n    this._index = mat.index;\n    this._rating = mat.rating;\n  }\n\n  get type() {\n    return this._type;\n  }\n}\n","export default class Section {\n  constructor(_type) {\n    this.type = _type;\n  }\n}\n","import Section from \"./Section\";\n\nexport default class Circular extends Section {\n  constructor(radius = 1) {\n    super(\"Circular\");\n    this._radius = radius;\n    this.area = this._radius * this._radius * Math.PI;\n  }\n\n  get diameter() {\n    return this._radius * 2;\n  }\n\n  set radius(val) {\n    this._radius = val;\n    this.area = this._radius * this._radius * Math.PI;\n  }\n\n  get radius() {\n    return this._radius;\n  }\n}\n","import Section from \"./Section\";\n\nexport default class Rectangular extends Section {\n  constructor(_height = 1, _width = 1) {\n    super(\"Rectangular\");\n    this.height = _height;\n    this.width = _width;\n    this.area = this.height * this.width;\n  }\n}\n","import Material from \"./Material\";\nimport Circular from \"./Circular\";\nimport Rectangular from \"./Rectangular\";\nexport default class Bar {\n  constructor(\n    id,\n    nodeI,\n    nodeJ,\n    material,\n    section,\n    internalForce = 0,\n    stress = 0\n  ) {\n    this._id = id;\n    this.nodeI = nodeI;\n    this.nodeJ = nodeJ;\n    this.material = new Material(material);\n    this.section =\n      section === \"Circular\" ? new Circular(1) : new Rectangular(1, 1);\n    this.internalForce = internalForce;\n    this.stress = stress;\n    this.name = `${this.nodeI.name}${this.nodeJ.name}`;\n  }\n\n  get length() {\n    if (this.nodeI && this.nodeJ) {\n      const { x: xi, y: yi } = this.nodeI.coordinates;\n      const { x: xj, y: yj } = this.nodeJ.coordinates;\n      const a = Math.abs(xi - xj);\n      const b = Math.abs(yi - yj);\n      return Math.sqrt(a * a, b * b);\n    }\n    return 0;\n  }\n}\n","import Support from \"../models/Support\";\nimport Node from \"../models/Node\";\nimport Bar from \"../models/Bar\";\n\nexport const fetchAll = (key) => {\n  return JSON.parse(localStorage.getItem(key));\n};\n\nexport const updateAll = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n  return fetchAll(key);\n};\n\nexport const reset = (key) => {\n  updateAll(\"key\", []);\n};\n\nexport const resetAll = () => {\n  localStorage.clear();\n};\n\nexport const exaggerate = (source, magnitude) => {\n  return source.map((item) => {\n    let node = item;\n    const { x: xDis, y: yDis } = item.displacement;\n    const { x: xCoord, y: yCoord } = item.coordinates;\n    node.displacement.x = xDis * magnitude;\n    node.displacement.y = yDis * magnitude;\n    node.coordinates.x = xCoord + node.displacement.x;\n    node.coordinates.y = yCoord + node.displacement.y;\n    node.support = new Support();\n    return node;\n  });\n};\n\nexport const convertToNodeModel = (data) => {\n  try {\n    const res = data.map((item) => {\n      const { _id, name, coordinates, force, support, displacement } = item;\n      return new Node(_id, name, coordinates, force, support, displacement);\n    });\n    return res;\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const convertToBarModel = (data) => {\n  try {\n    const res = data.map((item) => {\n      const { _id, nodeI, nodeJ, material, section } = item;\n      return new Bar(_id, nodeI, nodeJ, material._type, section);\n    });\n    return res;\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const createBarResults = (bars, resultantNodes) => {\n  // build lookup table\n  let lookup = {};\n  resultantNodes.forEach((node) => (lookup[node._id] = node));\n\n  // TODO: update internalForces\n  // TODO: update stress\n\n  const res = bars.map((item) => {\n    const nodeI = lookup[item.nodeI._id];\n    const nodeJ = lookup[item.nodeJ._id];\n    item.nodeI = nodeI;\n    item.nodeJ = nodeJ;\n    return item;\n  });\n  return res;\n};\n","import Node from \"../models/Node\";\nimport Coordinates from \"../models/Coordinates\";\nimport Displacement from \"../models/Displacement\";\nimport Support from \"../models/Support\";\nimport Force from \"../models/Force\";\nimport {\n  fetchAll,\n  updateAll,\n  convertToNodeModel,\n} from \"../services/dataServices\";\n\n/**\n * Get data from local storage\n * @return {Array} nodes from localStorage\n */\nexport const getAllNodes = () => {\n  const data = fetchAll(\"nodes\");\n  if (!data) return updateAll(\"nodes\", []);\n  try {\n    const nodes = convertToNodeModel(data);\n    return nodes;\n  } catch (error) {\n    // Should never happen\n    // Nodes are always initialized to [] if there are no saved nodes\n    console.error(error);\n  }\n};\n\n/**\n * Generates a string of length 10\n * @return {String} randomly generated Id\n */\nexport const _generateId = () => `_${Math.random().toString(36).substr(2, 9)}`;\n\n/**\n * Generates a 1 Uppercase Letter name\n * @return {String} next available name in the alphabet (uppercase) or \"A\"\n */\nexport const _generateName = (nodes) => {\n  if (nodes && nodes.length > 0) {\n    const names = nodes.map((item) => item.name.charCodeAt(0));\n    const newName = String.fromCharCode(Math.max(...names) + 1);\n    return newName;\n  }\n  return \"A\";\n};\n\n// TODO: TEST\nexport const getNodeById = (id) => {\n  const allNodes = fetchAll(\"nodes\");\n  const node = allNodes.find((item) => item._id === id);\n  return node;\n};\n\n// TODO: TEST\nexport const getNodeByName = (n) => {\n  const allNodes = fetchAll(\"nodes\");\n  const node = allNodes.find((item) => item.name === n);\n  return node;\n};\n\n// TODO: TEST\nexport const addNode = (data) => {\n  const newNode = createNode(data);\n  if (newNode) {\n    let nodes = getAllNodes().filter((item) => item._id !== data._id);\n    nodes.push(newNode);\n    return updateAll(\"nodes\", nodes);\n  } else {\n    return fetchAll(\"nodes\");\n  }\n};\n\n// TODO: TEST\nexport const updateNode = (data) => {\n  if (data) {\n    let tempNodes = getAllNodes().filter((item) => item._id !== data._id);\n    const newNode = createNode(data);\n    if (newNode) {\n      tempNodes.push(newNode);\n      return { newNode, nodes: tempNodes };\n    } else {\n      return tempNodes;\n    }\n  }\n};\n\n// TODO: TEST\nexport const deleteNode = (_id) => {\n  const nodes = getAllNodes().filter((item) => item._id !== _id);\n  return updateAll(\"nodes\", nodes);\n};\n\n//TODO: Remove\nexport const getSupportValues = (data) => {\n  const supportTable = {\n    Pin: { xSupport: 1, ySupport: 1 },\n    Roller: { xSupport: 0, ySupport: 1 },\n  };\n  const name = data;\n  if (name === \"\") return { xSupport: 0, ySupport: 0 };\n  const values = supportTable[name];\n  return values;\n};\n\nexport const getSupportType = ({ xSupport, ySupport }) => {\n  let support = \"\";\n  if (xSupport > 0 && ySupport > 0) {\n    support = \"Pin\";\n  } else if (xSupport === 0 && ySupport > 0) {\n    support = \"Roller\";\n  } else {\n    support = \"\";\n  }\n  return support;\n};\n\nconst _isValidData = (data) => {\n  if (!data) return false;\n  const { xCoord, yCoord, xForce, yForce } = data;\n  if (\n    isNaN(Number(xCoord)) ||\n    isNaN(Number(yCoord)) ||\n    isNaN(Number(xForce)) ||\n    isNaN(Number(yForce)) ||\n    isNaN(Number(xCoord))\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const createNode = (data) => {\n  if (_isValidData(data)) {\n    const {\n      _id,\n      name,\n      xCoord,\n      yCoord,\n      xForce,\n      yForce,\n      support,\n      xDisplacement,\n      yDisplacement,\n    } = data;\n\n    const allNodes = getAllNodes(); // TODO: Refactor to contain Node objects\n    const node = new Node(\n      _id ? _id : _generateId(),\n      name ? name : _generateName(allNodes),\n      new Coordinates(xCoord, yCoord),\n      new Force(xForce, yForce),\n      new Support(support.type || support), // support.type for updating node, support for new node\n      new Displacement(xDisplacement, yDisplacement)\n    );\n    return node;\n  }\n  return null;\n};\n\nexport const setForce = (data, source) => {\n  return source.map((item) => {\n    const node = item;\n    const { x, y } = data[item._id];\n    node.force = new Force(x, y);\n    return node;\n  });\n};\n\nexport const setDisplacement = (data, source) => {\n  return source.map((item) => {\n    const node = item;\n    const { x, y } = data[item._id];\n    node.displacement = new Displacement(x, y);\n    return node;\n  });\n};\n\nexport const setNodeResults = (source, forces, displacements) => {\n  let nodes = setForce(forces, source);\n  nodes = setDisplacement(displacements, nodes);\n  return nodes;\n};\n","import * as nodeController from \"./nodeController\";\nimport {\n  fetchAll,\n  updateAll,\n  convertToBarModel,\n} from \"../services/dataServices\";\nimport Bar from \"../models/Bar\";\n\nexport const getAllBars = () => {\n  const data = fetchAll(\"bars\");\n  if (!data) return updateAll(\"bars\", []);\n  const bars = convertToBarModel(data);\n  return bars;\n};\n\nconst _generateId = () => {\n  return \"_\" + Math.random().toString(36).substr(2, 9);\n};\n\nexport const getBarById = (id) => {\n  const bars = getAllBars();\n  const bar = bars.find((item) => item._id === id);\n  return bar ? bar : null;\n};\n\n//TODO: TEST\nexport const getBarNodes = (data) => {\n  const { nodeNameI, nodeNameJ } = data;\n  const nodeI = nodeController.getNodeByName(nodeNameI);\n  const nodeJ = nodeController.getNodeByName(nodeNameJ);\n  if (nodeI && nodeJ) {\n    return {\n      nodeI,\n      nodeJ,\n    };\n  } else {\n    return null;\n  }\n};\n\n/**\n * Delete all bars connecgted to a node\n * @param {id} id of Node\n * @returns {Array} array of updated bars\n */\nexport const deleteConnectedBars = (id) => {\n  const prevBars = getAllBars();\n  const bars = prevBars.filter(\n    (item) => item.nodeI._id !== id && item.nodeJ._id !== id\n  );\n  return updateAll(\"bars\", bars);\n};\n\n// TODO: TEST\nexport const createBar = (data) => {\n  const { _id, material, section } = data;\n  // TODO: Add dynamic dimensions for bar\n  const nodes = getBarNodes(data);\n  if (nodes) {\n    const { nodeI, nodeJ } = nodes;\n    const bar = new Bar(\n      _id ? _id : _generateId(),\n      nodeI,\n      nodeJ,\n      material,\n      section\n    );\n    return bar;\n  } else {\n    return null;\n  }\n};\n\nexport const updateBarNode = (node) => {\n  // updated node related to bar being updated\n  const prevBars = getAllBars();\n  const bars = prevBars.map((item) => {\n    if (item.nodeI._id === node._id) item.nodeI = node;\n    else if (item.nodeJ._id === node._id) item.nodeJ = node;\n    return item;\n  });\n  return updateAll(\"bars\", bars);\n};\n\nexport const updateBar = (data) => {\n  const bars = getAllBars().filter((item) => item._id !== data._id);\n  const bar = createBar(data);\n  if (bar) {\n    let tempBars = [...bars];\n    tempBars.push(bar);\n  } else {\n    return null;\n  }\n};\n\nexport const addBar = (data) => {\n  let bars = getAllBars().filter((item) => item._id !== data._id);\n  const bar = createBar(data);\n  if (bar) {\n    bars.push(bar);\n    updateAll(\"bars\", bars);\n    return bars;\n  } else {\n    return null;\n  }\n};\n\nexport const deleteBar = (id) => {\n  const bars = getAllBars().filter((item) => item._id !== id);\n  updateAll(\"bars\", bars);\n  return bars;\n};\n\nexport const setBarResults = (source, internalForces, stress) => {\n  const bars = source.map((item) => {\n    item.internalForce = internalForces[item._id];\n    item.stress = stress[item._id];\n    return item;\n  });\n  return bars;\n};\n","const planeSize = { width: 2000, height: 2000 };\nconst origin = { x: planeSize.width / 2, y: planeSize.height / 2 };\n\nexport const calcRelativeCoord = (x, y) => {\n  const xRel = origin.x + x;\n  const yRel = planeSize.height - origin.y - y;\n  return { xRel, yRel };\n};\n\nexport const calculatePlaneSize = (nodes) => {\n  const viewBox = { width: planeSize.width, height: planeSize.height };\n  return { planeSize, viewBox };\n};\n\nexport const calcLabelPosition = (radius, xRel, yRel) => {\n  const x = xRel - radius * 2;\n  const y = yRel - radius * 1.5;\n  return { x, y };\n};\n","import axios from \"axios\";\n\n// TODO: Move to .env\n// var port = 5000;\n// axios.defaults.baseURL = \"http://localhost:\" + port;\naxios.defaults.baseURL = \"https://truss-solver-server.herokuapp.com/\";\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","import CoordinatesLabel from \"./coordinatesLabel\";\nexport default CoordinatesLabel;\n","import React from \"react\";\nimport \"./coordinatesLabel.scss\";\n\nconst CoordinatesLabel = ({ placement, text }) => {\n  const { x, y } = placement;\n\n  return (\n    <text className=\"coordinatesLabel\" x={x} y={y}>\n      {text}\n    </text>\n  );\n};\nexport default CoordinatesLabel;\n","import Support from \"./support\";\nexport default Support;\n","import React from \"react\";\nimport \"./support.scss\";\nconst Support = ({ contactCoords, type, offset }) => {\n  const { xRel, yRel } = contactCoords;\n  const height = 15;\n  const width = 20;\n  const strokeWidth = 1.5;\n  const stroke = \"#000000\";\n  const fill = \"#00000000\";\n\n  const base = (\n    <>\n      <line\n        x1={`${xRel - width}`}\n        y1={`${yRel + height + offset}`}\n        x2={`${xRel + width}`}\n        y2={`${yRel + height + offset}`}\n        stroke=\"black\"\n        strokeWidth={`${strokeWidth * 1.5}`}\n      />\n    </>\n  );\n\n  const pin = (\n    <>\n      <polygon\n        points={`${xRel}            ,${yRel + offset} \n                 ${xRel - width / 2}, ${yRel + height + offset}\n                 ${xRel + width / 2},${yRel + height + offset}`}\n        fill={fill}\n        stroke={stroke}\n        strokeWidth={`${strokeWidth}`}\n      />\n      {base}\n    </>\n  );\n\n  const roller = (\n    <>\n      <circle\n        cx={xRel}\n        cy={yRel + height / 2 + offset}\n        r={height / 2}\n        fill={fill}\n        stroke={stroke}\n        strokeWidth={`${strokeWidth}`}\n      />\n      {base}\n    </>\n  );\n\n  const _getSupport = () => {\n    if (type.xSupport > 0 && type.ySupport > 0 && pin) return pin;\n    else if (type.xSupport === 0 && type.ySupport > 0) return roller;\n    else return null;\n  };\n\n  return <>{_getSupport()}</>;\n};\n\nexport default Support;\n","import Force from \"./force\";\nexport default Force;\n","import React from \"react\";\n\nconst Force = ({ xRel, yRel, direction, magnitude, style }) => {\n  const lineWidth = 6;\n  const lineLength = 20;\n\n  const calcAxis = () => {\n    return direction === \"x\"\n      ? { height: lineWidth, width: lineLength }\n      : { height: lineLength, width: lineWidth };\n  };\n\n  const calcDirection = () => {\n    const rotate = { transform: `rotate(180 ${xRel} ${yRel})` };\n    if (direction === \"x\") return magnitude < 0 && rotate;\n    else if (direction === \"y\") return magnitude > 0 && rotate;\n  };\n\n  return (\n    <rect\n      style={style}\n      className=\"force\"\n      rx=\"2.5\"\n      x={xRel - lineWidth / 2}\n      y={yRel - lineWidth / 2}\n      {...calcAxis()}\n      {...calcDirection()}\n      fill={direction === \"x\" ? \"red\" : \"green\"}\n    />\n  );\n};\n\nexport default Force;\n","import Point from \"./point\";\nexport default Point;\n","import React from \"react\";\nimport { Transition } from \"react-spring/renderprops\";\nimport \"./point.scss\";\n\nconst Point = ({ placement, radius, fill, isSelected }) => {\n  const center = { cx: placement.xRel, cy: placement.yRel };\n  const strokeStyle = { stroke: \"black\", strokeWidth: \"2.5\" };\n  return (\n    <g>\n      {isSelected ? (\n        <Transition\n          items={[<circle {...center} r={radius * 1.5} {...strokeStyle} />]}\n          from={{ fill: `${fill}` }}\n          enter={{ fill: \"red\" }}>\n          {(c) => c && ((props) => <g style={props}>{c}</g>)}\n        </Transition>\n      ) : (\n        <circle {...center} r={radius} {...strokeStyle} fill=\"white\" />\n      )}\n    </g>\n  );\n};\nexport default Point;\n","import Node from \"./node\";\nexport default Node;\n","import React from \"react\";\nimport {\n  calcRelativeCoord,\n  calcLabelPosition,\n} from \"../../../controllers/coordinatePlaneController\";\nimport CoordinatesLabel from \"../coordinatesLabel/index\";\nimport Support from \"../support/index\";\nimport Force from \"../force/index\";\nimport Point from \"../point/index\";\nimport { Spring } from \"react-spring/renderprops\";\nimport \"./node.scss\";\n\nconst Node = ({\n  data,\n  onClick,\n  isSelected,\n  size,\n  fill,\n  labelOn,\n  forcesOn,\n  nameOn,\n  nodeNameColor,\n  animation,\n}) => {\n  const { _id, name, coordinates, force, support } = data;\n  const radius = size;\n  const { xRel, yRel } = calcRelativeCoord(coordinates.x, coordinates.y);\n  const labelPlacement = calcLabelPosition(radius, xRel, yRel);\n  const label = `${name} [${coordinates.x},${coordinates.y}]`;\n\n  return (\n    <g\n      style={animation}\n      className=\"clickable node\"\n      onClick={() => onClick(_id)}>\n      {labelOn && <CoordinatesLabel text={label} placement={labelPlacement} />}\n      {force.x && forcesOn && (\n        <Spring from={{ opacity: 0 }} to={{ opacity: 1 }} delay={500}>\n          {(props) => (\n            <Force\n              style={props}\n              xRel={xRel}\n              yRel={yRel}\n              direction=\"x\"\n              magnitude={force.x}\n            />\n          )}\n        </Spring>\n      )}\n      {force.y && forcesOn && (\n        <Spring from={{ opacity: 0 }} to={{ opacity: 1 }} delay={500}>\n          {(props) => (\n            <Force\n              style={props}\n              xRel={xRel}\n              yRel={yRel}\n              direction=\"y\"\n              magnitude={force.y}\n            />\n          )}\n        </Spring>\n      )}\n      <Support\n        contactCoords={{ xRel, yRel }}\n        type={{ xSupport: support.x, ySupport: support.y }}\n        offset={radius}\n      />\n      <Point\n        placement={{ xRel, yRel }}\n        label={name}\n        labelColor={nodeNameColor ? nodeNameColor : \"#000\"}\n        radius={radius}\n        fill={fill}\n        isSelected={isSelected}\n        nameOn={nameOn}\n      />\n    </g>\n  );\n};\n\nexport default Node;\n","import Bar from \"./bar\";\nexport default Bar;\n","import React from \"react\";\nimport { calcRelativeCoord } from \"../../../controllers/coordinatePlaneController\";\nimport \"./bar.scss\";\n\nconst Bar = ({ data, onClick, fill, width, animation }) => {\n  const { _id, nodeI, nodeJ } = data;\n  const coord1 = calcRelativeCoord(nodeI.coordinates.x, nodeI.coordinates.y);\n  const coord2 = calcRelativeCoord(nodeJ.coordinates.x, nodeJ.coordinates.y);\n  return (\n    <g className=\"bar clickable\" onClick={() => onClick(_id)} style={animation}>\n      <line\n        strokeLinecap=\"round\"\n        rx=\"5\"\n        x1={coord1.xRel}\n        y1={coord1.yRel}\n        x2={coord2.xRel}\n        y2={coord2.yRel}\n        stroke={fill}\n        strokeWidth={width}\n      />\n    </g>\n  );\n};\n\nexport default Bar;\n","import CoordinatePlane from \"./coordinatePlane\";\nexport default CoordinatePlane;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport { config, Spring } from \"react-spring/renderprops\";\nimport Node from \"../node/index\";\nimport Bar from \"../bar/index\";\nimport \"./coordinatePlane.scss\";\n\nconst CoordinatePlane = ({\n  planeSize,\n  primaryData,\n  secondaryData,\n  selectedNode,\n  onSetSelectedNode,\n  onSetSelectedBar,\n  primaryLabelsOn,\n  primaryNamesOn,\n  secondaryLabelsOn,\n  secondaryNamesOn,\n  primaryForcesOn,\n  secondaryForcesOn,\n  nodeFill,\n  nodeSize,\n  nodeNameColor,\n  barFill,\n  barSize,\n}) => {\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    setWidth(ref.current.clientWidth);\n    setHeight(ref.current.clientHeight);\n  }, [height, width]);\n\n  const renderPrimaryNodes = () =>\n    primaryData.nodes.map((item) => (\n      <Spring key={item._id} from={{ opacity: 0.1 }} to={{ opacity: 1 }}>\n        {(props) => (\n          <Node\n            animation={props}\n            data={item}\n            onClick={onSetSelectedNode}\n            isSelected={item._id === selectedNode._id}\n            fill={nodeFill}\n            size={nodeSize[0]}\n            nameOn={primaryNamesOn}\n            nodeNameColor={nodeNameColor}\n            labelOn={primaryLabelsOn}\n            forcesOn={primaryForcesOn}\n          />\n        )}\n      </Spring>\n    ));\n\n  const renderPrimaryBars = () =>\n    primaryData.bars.map((item) => {\n      return (\n        <Spring key={item._id} from={{ opacity: 0.1 }} to={{ opacity: 1 }}>\n          {(props) => (\n            <Bar\n              animation={props}\n              data={item}\n              onClick={onSetSelectedBar}\n              fill={barFill[0]}\n              width={barSize[0]}\n            />\n          )}\n        </Spring>\n      );\n    });\n\n  // TODO: Remove support rendering\n  const renderSecondaryNodes = () =>\n    secondaryData &&\n    secondaryData.nodes.map((item, index) => {\n      const { x, y } = item.displacement;\n      return (\n        <Spring\n          key={index}\n          from={{\n            transform: `translate3d(${-x}px,${y}px,0)`,\n          }}\n          to={{\n            transform: `translate3d(0px,0px,0)`,\n          }}\n          config={config.wobbly}\n          delay={500}>\n          {(props) => (\n            <Node\n              animation={props}\n              data={item}\n              onClick={() => {}}\n              isSelected={item._id === selectedNode._id}\n              fill=\"orange\"\n              size={nodeSize[1]}\n              nameOn={secondaryNamesOn}\n              labelOn={secondaryLabelsOn}\n              forcesOn={secondaryForcesOn}\n            />\n          )}\n        </Spring>\n      );\n    });\n\n  const renderSecondaryBars = () =>\n    secondaryData &&\n    secondaryData.bars.map((item, index) => (\n      <Spring\n        key={index}\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        delay={750}\n        config={config.slow}>\n        {(props) => (\n          <Bar\n            animation={props}\n            data={item}\n            onClick={() => {}}\n            fill={barFill[1]}\n            width={barSize[1]}\n          />\n        )}\n      </Spring>\n    ));\n\n  return (\n    <div id=\"coordinatePlane\" ref={ref}>\n      <TransformWrapper\n        defaultScale={1}\n        options={{ limitToBounds: false }}\n        defaultPositionX={-(planeSize.width / 4 + width)}\n        defaultPositionY={-(planeSize.height / 4 - height)}\n        doubleClick={{ mode: \"zoomOut\" }}>\n        <TransformComponent>\n          <svg width={planeSize.width} height={planeSize.height}>\n            <React.Fragment>{renderPrimaryBars()}</React.Fragment>\n            <React.Fragment>{renderPrimaryNodes()}</React.Fragment>\n            <React.Fragment>{renderSecondaryBars()}</React.Fragment>\n            <React.Fragment> {renderSecondaryNodes()}</React.Fragment>\n          </svg>\n        </TransformComponent>\n      </TransformWrapper>\n    </div>\n  );\n};\n\nexport default CoordinatePlane;\n","import ActionButton from \"./actionButton\";\nexport default ActionButton;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport \"./actionButton.scss\";\n\nconst ActionButton = ({ label, onClick, color }) => {\n  return (\n    <Button className=\"w-100 mt-1\" size=\"sm\" onClick={onClick} color={color}>\n      {label}\n    </Button>\n  );\n};\n\nexport default ActionButton;\n","import InputFormGroup from \"./inputFormGroup\";\nexport default InputFormGroup;\n","import React from \"react\";\nimport { Input, FormGroup, Label } from \"reactstrap\";\nimport \"./inputFormGroup.scss\";\nconst InputFormGroup = ({\n  name,\n  label,\n  type,\n  value,\n  onChange,\n  placeholder,\n  disabled,\n}) => {\n  return (\n    <div className=\"inputFormGroup\">\n      <FormGroup>\n        {label && <Label for={name}>{label}</Label>}\n        <Input\n          bsSize=\"sm\"\n          type={type}\n          name={name}\n          value={value}\n          onChange={onChange}\n          placeholder={placeholder}\n          disabled={disabled}\n        />\n      </FormGroup>\n    </div>\n  );\n};\nexport default InputFormGroup;\n","import Menu from \"./menu\";\nexport default Menu;\n","import React, { useState } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport \"./menu.scss\";\n\nconst Menu = ({ options, name, label, selected, onChange, disabled }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen((prevState) => !prevState);\n  return (\n    <Dropdown\n      className=\"mb-2\"\n      disabled={disabled}\n      isOpen={isOpen}\n      toggle={toggle}\n      size=\"sm\"\n    >\n      <DropdownToggle\n        color={disabled ? \"outline-secondary\" : \"outline-primary\"}\n        size=\"sm\"\n        className=\"col-12\"\n        caret\n      >\n        {selected ? selected : label}\n      </DropdownToggle>\n      <DropdownMenu>\n        {options.map((item) => (\n          <DropdownItem key={item} name={name} value={item} onClick={onChange}>\n            {item}\n          </DropdownItem>\n        ))}\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\nexport default Menu;\n","import React, { Component } from \"react\";\nimport InputFormGroup from \"../inputFormGroup/index\";\nimport { Button } from \"reactstrap\";\nimport Menu from \"../menu/index\";\nimport ActionButton from \"../actionButton/index\";\nimport \"./form.scss\";\n\nclass Form extends Component {\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const { data } = { ...this.state };\n    const { value, name } = input;\n    data[name] = value;\n    this.setState({ data });\n    if (value) this.doUpdate();\n  };\n\n  renderInputFormGroup = (\n    name,\n    label,\n    type,\n    value,\n    onChange,\n    placeholder,\n    disabled\n  ) => {\n    return (\n      <InputFormGroup\n        name={name}\n        label={label}\n        type={type}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    );\n  };\n\n  renderSubmitBtn = (label, disabled) => {\n    return (\n      <Button\n        color={disabled ? \"secondary\" : \"primary\"}\n        size=\"sm\"\n        type=\"submit\"\n        disabled={disabled}\n        className=\"w-100\">\n        {label}\n      </Button>\n    );\n  };\n\n  renderDropdownMenu = (options, name, label, selected, onChange, disabled) => {\n    return (\n      <Menu\n        options={options}\n        name={name}\n        label={label}\n        selected={selected}\n        onChange={onChange}\n        disabled={disabled}\n      />\n    );\n  };\n\n  renderActionButton = (label, onClick, color) => {\n    return <ActionButton label={label} onClick={onClick} color={color} />;\n  };\n}\n\nexport default Form;\n","import nodeForm from \"./nodeForm\";\nexport default nodeForm;\n","import React from \"react\";\nimport { Label } from \"reactstrap\";\nimport Form from \"../common/form/form\";\nimport \"./nodeForm.scss\";\nclass NodeForm extends Form {\n  state = {\n    data: {\n      _id: \"\",\n      name: \"\",\n      xCoord: 0,\n      yCoord: 0,\n      xForce: 0,\n      yForce: 0,\n      support: \"None\",\n    },\n    supportOptions: [\"Pin\", \"Roller\", \"None\"],\n    errors: {},\n  };\n\n  _initializeForm() {\n    let data = {\n      _id: \"\",\n      name: \"\",\n      xCoord: 0,\n      yCoord: 0,\n      xForce: 0,\n      yForce: 0,\n      support: \"None\",\n    };\n    this.setState({ data });\n    this.setState({ support: \"\" });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data: prevData } = prevProps;\n    const { data: newData } = this.props;\n    if (newData._id && prevData._id !== newData._id) {\n      let data = { ...newData };\n      data.xCoord = newData.coordinates.x;\n      data.yCoord = newData.coordinates.y;\n      data.xForce = newData.force.x;\n      data.yForce = newData.force.y;\n      data.support = newData.support.type;\n      delete data[\"coordinates\"];\n      delete data[\"force\"];\n      delete data[\"displacement\"];\n      this.setState({ data });\n    }\n  }\n\n  doDelete(_id) {\n    this.props.onDeleteNode(_id);\n    this._initializeForm();\n  }\n\n  doUpdate() {\n    this.props.onUpdateNode(this.state.data);\n  }\n\n  doSubmit() {\n    this.props.onAddNode(this.state.data);\n    this._initializeForm();\n    // else add error for particular input\n  }\n\n  render() {\n    const {\n      _id,\n      name,\n      xCoord,\n      yCoord,\n      xForce,\n      yForce,\n      support,\n    } = this.state.data;\n\n    const { supportOptions: options } = this.state;\n\n    return (\n      <div id=\"nodeForm\" className=\"w-100\">\n        <h4>Nodes</h4>\n        {name && <Label>Name: {name}</Label>}\n        <form onSubmit={this.handleSubmit}>\n          <Label>Coordinates</Label>\n          {this.renderInputFormGroup(\n            \"xCoord\",\n            null,\n            \"number\",\n            xCoord,\n            this.handleChange,\n            \"X-Coordinate\"\n          )}\n          {this.renderInputFormGroup(\n            \"yCoord\",\n            null,\n            \"number\",\n            yCoord,\n            this.handleChange,\n            \"Y-Coordinate\"\n          )}\n          <Label>Forces</Label>\n          {this.renderInputFormGroup(\n            \"xForce\",\n            null,\n            \"number\",\n            xForce,\n            this.handleChange,\n            \"X-Component\",\n            _id ? false : true\n          )}\n          {this.renderInputFormGroup(\n            \"yForce\",\n            null,\n            \"number\",\n            yForce,\n            this.handleChange,\n            \"Y-Component\",\n            _id ? false : true\n          )}\n          <Label>Support Type</Label>\n          {this.renderDropdownMenu(\n            options,\n            \"support\",\n            \"Support\",\n            support,\n            this.handleChange,\n            _id ? false : true\n          )}\n          {this.renderSubmitBtn(_id ? \"Update\" : \"Add\")}\n          {_id\n            ? this.renderActionButton(\n                \"Delete\",\n                () => this.doDelete(_id),\n                \"danger\"\n              )\n            : null}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NodeForm;\n","import barForm from './barForm';\nexport default barForm;\n","import React from \"react\";\nimport \"./barForm.scss\";\nimport { Label } from \"reactstrap\";\nimport Form from \"../common/form/index\";\n\n// TODO: Add dynamic dimensions for bar\nclass BarForm extends Form {\n  state = {\n    data: {\n      _id: \"\",\n      nodeNameI: \"\",\n      nodeNameJ: \"\",\n      material: \"Steel\",\n      section: \"Circular\",\n    },\n    errors: {},\n  };\n\n  componentDidMount() {\n    this._initializeForm();\n  }\n\n  _initializeForm() {\n    const data = {\n      _id: \"\",\n      nodeNameI: \"\",\n      nodeNameJ: \"\",\n      material: \"Steel\",\n      section: \"Circular\",\n    };\n    this.setState({ data });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data: prevData } = prevProps;\n    const { data: newData } = this.props;\n    if (newData._id && prevData._id !== newData._id) {\n      const { _id, nodeI, nodeJ, material, section } = newData;\n      let data = { ...this.state.data };\n      data._id = _id;\n      data.nodeNameI = nodeI.name;\n      data.nodeNameJ = nodeJ.name;\n      data.material = material.type;\n      data.section = section.type;\n      this.setState({ data });\n    }\n  }\n\n  doUpdate = () => {\n    this.props.onUpdateBar(this.state.data);\n  };\n\n  doSubmit = () => {\n    this.props.onAddBar(this.state.data);\n    this._initializeForm();\n  };\n\n  isDisabled = (nodeNameI, nodeNameJ) =>\n    nodeNameI && nodeNameJ ? false : true;\n\n  render() {\n    const { _id, nodeNameI, nodeNameJ, material, section } = this.state.data;\n\n    return (\n      <div id=\"barForm\" className=\"w-100\">\n        <h4 className=\"mt-2\">Bars</h4>\n        <Label>Nodes</Label>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInputFormGroup(\n            \"nodeNameI\",\n            \"\",\n            \"text\",\n            nodeNameI,\n            this.handleChange,\n            \"Node 1\"\n          )}\n          {this.renderInputFormGroup(\n            \"nodeNameJ\",\n            \"\",\n            \"text\",\n            nodeNameJ,\n            this.handleChange,\n            \"Node 2\"\n          )}\n          {this.renderDropdownMenu(\n            [\"Steel\", \"Wood\"],\n            \"material\",\n            \"Material\",\n            material,\n            this.handleChange,\n            this.isDisabled(nodeNameI, nodeNameJ)\n          )}\n          {this.renderDropdownMenu(\n            [\"Rectangular\", \"Circular\"],\n            \"section\",\n            \"Section\",\n            section,\n            this.handleChange,\n            this.isDisabled(nodeNameI, nodeNameJ)\n          )}\n\n          {this.renderSubmitBtn(\n            _id ? \"Update\" : \"Add\",\n            this.isDisabled(nodeNameI, nodeNameJ)\n          )}\n          {_id\n            ? this.renderActionButton(\n                \"Delete\",\n                () => this.props.onDeleteBar(_id),\n                \"danger\"\n              )\n            : null}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default BarForm;\n","import Form from \"./form\";\nexport default Form;\n","import TrussSolver from \"./trussSolver\";\nexport default TrussSolver;\n","import React, { useState } from \"react\";\nimport * as nodeController from \"../../controllers/nodeController\";\nimport * as barController from \"../../controllers/barController\";\nimport * as data from \"../../services/dataServices\";\nimport { calculatePlaneSize } from \"../../controllers/coordinatePlaneController\";\nimport http from \"../../services/httpServices\";\nimport CoordinatePlane from \"../common/coordinatePlane/index\";\nimport ActionButton from \"../common/actionButton/index\";\nimport NodeForm from \"../nodeForm/index\";\nimport BarForm from \"../barForm/index\";\nimport \"./trussSolver.scss\";\n\nconst TrussSolver = (props) => {\n  const [displayNodes, setDisplayNodes] = useState(\n    data.convertToNodeModel(nodeController.getAllNodes())\n  );\n  const [displayBars, setDisplayBars] = useState(\n    data.convertToBarModel(barController.getAllBars())\n  );\n  const [selectedNode, setSelectedNode] = useState({ id: \"\" });\n  const [selectedBar, setSelectedBar] = useState({ id: \"\" });\n\n  const handleAddNode = (data) => {\n    const nodes = nodeController.addNode(data);\n    setDisplayNodes(nodes);\n    setSelectedNode({ id: \"\" });\n  };\n\n  const handleUpdateNode = (data) => {\n    const { nodes, newNode } = nodeController.updateNode(data);\n    setDisplayNodes(nodes);\n    const bars = barController.updateBarNode(newNode);\n    setDisplayBars(bars);\n  };\n\n  const handleSetSelectedNode = (id) => {\n    const node = nodeController.getNodeById(id);\n    setSelectedNode(node);\n  };\n\n  const handleDeleteNode = (id) => {\n    const nodes = nodeController.deleteNode(id);\n    setDisplayNodes(nodes);\n    const bars = barController.deleteConnectedBars(id);\n    setDisplayBars(bars);\n    setSelectedNode({ id: \"\" });\n  };\n\n  const handleUpdateBar = (data) => {\n    const bars = barController.updateBar(data);\n    if (bars) setDisplayBars(bars);\n  };\n\n  const handleAddBar = (data) => {\n    const bars = barController.addBar(data);\n    if (bars) setDisplayBars(bars);\n  };\n\n  const handleSetSelectedBar = (id) => {\n    const bar = barController.getBarById(id);\n    setSelectedBar(bar);\n    handleUpdateBar(bar);\n  };\n\n  const handleDeleteBar = (id) => {\n    const bars = barController.deleteBar(id);\n    setDisplayBars(bars);\n  };\n\n  const handleResetAll = () => {\n    setDisplayBars([]);\n    setDisplayNodes([]);\n    setSelectedNode({ id: \"\" });\n    data.resetAll();\n  };\n\n  const handleCalculate = () => {\n    http\n      .post(\"api/calculate\", {\n        nodes: displayNodes,\n        bars: displayBars,\n      })\n\n      .then((res) => {\n        const resultantNodes = nodeController.setNodeResults(\n          displayNodes,\n          res.data.forces,\n          res.data.displacement\n        );\n\n        const resultantBars = barController.setBarResults(\n          displayBars,\n          res.data.internal,\n          res.data.stress\n        );\n\n        props.history.push({\n          pathname: \"/solver/results\",\n          state: { resultantNodes, resultantBars },\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\"Please double check input members.\");\n      });\n  };\n\n  const memberStyles = {\n    nodeNameColor: \"#0000ff\",\n    nodeSize: [4, 4],\n    nodeFill: \"white\",\n    barSize: [4, 4],\n    barFill: [\"gray\", \"#0000ff2f\"],\n  };\n\n  const { planeSize, viewBox } = calculatePlaneSize(displayNodes);\n  return (\n    <div\n      id=\"trussSolver\"\n      className=\"d-flex justify-self-center justify-space-between m-2\">\n      <div className=\"forms container d-flex flex-column justify-content-between col-2\">\n        <div className=\"row\">\n          <NodeForm\n            controller={nodeController}\n            onAddNode={(data) => handleAddNode(data)}\n            onUpdateNode={(data) => handleUpdateNode(data)}\n            onDeleteNode={(data) => handleDeleteNode(data)}\n            data={selectedNode}\n          />\n          <BarForm\n            controller={barController}\n            onAddBar={(data) => handleAddBar(data)}\n            onUpdateBar={(data) => handleUpdateBar(data)}\n            onDeleteBar={(data) => handleDeleteBar(data)}\n            data={selectedBar}\n          />\n          <ActionButton\n            label=\"Calculate\"\n            onClick={handleCalculate}\n            color=\"success\"\n          />\n        </div>\n        <div className=\"row\">\n          <ActionButton label=\"Reset\" onClick={handleResetAll} color=\"danger\" />\n        </div>\n      </div>\n      <div className=\"col-10\">\n        <CoordinatePlane\n          viewBox={viewBox}\n          planeSize={planeSize}\n          primaryData={{ nodes: displayNodes, bars: displayBars }}\n          secondaryData={null}\n          selectedNode={selectedNode}\n          selectedBar={selectedBar}\n          onSetSelectedNode={(id) => handleSetSelectedNode(id)}\n          onSetSelectedBar={(id) => handleSetSelectedBar(id)}\n          primaryLabelsOn={true}\n          primaryNamesOn={true}\n          primaryForcesOn={true}\n          {...memberStyles}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TrussSolver;\n","import TableHeader from \"./tableHeader\";\nexport default TableHeader;\n","import React from \"react\";\nimport \"./tableHeader.scss\";\n\nconst TableHeader = ({ columns }) => {\n  return (\n    <thead>\n      <tr>\n        {columns.map((col) => (\n          <th scope=\"col\" key={col.label}>\n            {col.label}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default TableHeader;\n","import TableBody from \"./tableBody\";\nexport default TableBody;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport \"./tableBody.scss\";\n\nconst TableBody = ({ data, columns }) => {\n  return (\n    <tbody>\n      {data.map((item) => (\n        <tr key={item._id}>\n          {columns.map((col) => {\n            const val = _.get(item, col.path);\n            return col.content ? (\n              <td key={col.key}>{col.content(val)}</td>\n            ) : (\n              <td key={col.path}>{isNaN(val) ? val : val.toFixed(2)}</td>\n            );\n          })}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\nexport default TableBody;\n","import Table from \"./table\";\nexport default Table;\n","import React from \"react\";\nimport TableHeader from \"../tableHeader/index\";\nimport TableBody from \"../tableBody/index\";\nimport \"./table.scss\";\n\nconst Table = ({ columns, data, header }) => {\n  return (\n    <div>\n      <h4>{header}</h4>\n      <table className=\"table table-bordered table-sm\">\n        <TableHeader columns={columns} />\n        <TableBody columns={columns} data={data} />\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import DisplacementTable from \"./displacementTable\";\nexport default DisplacementTable;\n","import React from \"react\";\nimport Table from \"../common/table/index\";\nimport \"./displacementTable.scss\";\n\nconst DisplacementTable = ({ data }) => {\n  const columns = [\n    { path: \"name\", label: \"Name\" },\n    { path: \"displacement.x\", label: \"X\" },\n    { path: \"displacement.y\", label: \"Y\" },\n  ];\n  const header = \"Displacements\";\n  return <Table columns={columns} data={data} header={header} />;\n};\nexport default DisplacementTable;\n","import React from \"react\";\nimport Table from \"../common/table/index\";\nimport \"./forcesTable.scss\";\n\nconst ForcesTable = ({ data }) => {\n  const columns = [\n    { path: \"name\", label: \"Name\" },\n    { path: \"force.x\", label: \"X\" },\n    { path: \"force.y\", label: \"Y\" },\n  ];\n\n  const header = \"Forces\";\n  return <Table columns={columns} data={data} header={header} />;\n};\n\nexport default ForcesTable;\n","import StressTable from \"./stressTable\";\nexport default StressTable;\n","import React from \"react\";\nimport Table from \"../common/table/index\";\nimport \"./stressTable.scss\";\n\nconst StressTable = ({ data }) => {\n  const columns = [\n    { path: \"name\", label: \"Name\" },\n    { path: \"stress\", label: \"Mag.\" },\n    {\n      key: \"type\",\n      path: \"stress\",\n      content: (val) => getType(val),\n      label: \"Type\",\n    },\n  ];\n  const header = \"Stress\";\n  const getType = (val) => {\n    return val < 0 ? \"C\" : \"T\";\n  };\n  return <Table columns={columns} data={data} header={header} />;\n};\nexport default StressTable;\n","import React from \"react\";\nimport Table from \"../common/table/index\";\nimport \"./internalForcesTable.scss\";\n\nconst InternalForcesTable = ({ data }) => {\n  const columns = [\n    { path: \"name\", label: \"Name\" },\n    { path: \"stress\", label: \"Mag.\" },\n  ];\n  const header = \"Internal Forces\";\n\n  return <Table columns={columns} data={data} header={header} />;\n};\nexport default InternalForcesTable;\n","import Results from \"./results\";\nexport default Results;\n","import React from \"react\";\nimport * as nodeController from \"../../controllers/nodeController\";\nimport * as barController from \"../../controllers/barController\";\nimport * as data from \"../../services/dataServices\";\nimport * as planeController from \"../../controllers/coordinatePlaneController\";\nimport CoordinatePlane from \"../common/coordinatePlane/index\";\nimport ActionButton from \"../common/actionButton\";\nimport DisplacementTable from \"../displacementTable\";\nimport ForcesTable from \"../forcesTable/forcesTable\";\nimport \"./results.scss\";\nimport StressTable from \"../stressTable/index\";\nimport InternalForcesTable from \"../internalForcesTable/internalForcesTable\";\n\nconst Results = (props) => {\n  const existingNodes = nodeController.getAllNodes();\n  const existingBars = barController.getAllBars();\n  const { resultantNodes, resultantBars } = props.history.location.state;\n  const { planeSize, viewBox } = planeController.calculatePlaneSize(\n    existingNodes\n  );\n\n  // exaggerate displacements\n  const exagNodeResults = data.exaggerate(resultantNodes, 40);\n\n  // update bar results\n  const exagBarResults = data.createBarResults(resultantBars, exagNodeResults);\n\n  const memberStyles = {\n    nodeSize: [6, 6],\n    nodeFill: \"lightblue\",\n    barSize: [4, 4],\n    barFill: [\"orange\", \"#0000ffbf\"],\n  };\n\n  return (\n    <div\n      id=\"results\"\n      className=\"d-flex justify-self-center justify-space-between m-2\">\n      <div className=\"col-2\">\n        <DisplacementTable data={resultantNodes} />\n        <ForcesTable data={resultantNodes} />\n        <StressTable data={resultantBars} />\n        <InternalForcesTable data={resultantBars} />\n        <ActionButton\n          onClick={() => props.history.push(\"/solver\")}\n          label=\"Edit Members\"\n          color=\"info\"\n        />\n      </div>\n\n      <div className=\"col-10\">\n        <CoordinatePlane\n          viewBox={viewBox}\n          planeSize={planeSize}\n          primaryData={{ nodes: existingNodes, bars: existingBars }}\n          secondaryData={{ nodes: exagNodeResults, bars: exagBarResults }}\n          selectedNode={{ id: \"\" }}\n          onSetSelectedNode={() => {}}\n          onSetSelectedBar={() => {}}\n          primaryLabelsOn={true}\n          primaryNamesOn={false}\n          primaryForcesOn={false}\n          secondaryForcesOn={true}\n          secondaryLabelsOn={false}\n          secondaryNamesOn={false}\n          {...memberStyles}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport TrussSolver from \"./components/trussSolver/index\";\nimport Results from \"./components/results/index\";\nimport \"./styles/_global.scss\";\nimport \"./App.css\";\n\nconst App = () => {\n  const baseRoute = \"\";\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route\n          exact\n          path={`${baseRoute}/`}\n          component={(props) => <TrussSolver {...props} />}\n        />\n        <Route\n          path={`${baseRoute}/results`}\n          render={(props) => <Results {...props} />}\n        />\n        <Redirect from={`${baseRoute}*`} to={`${baseRoute}/`} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}